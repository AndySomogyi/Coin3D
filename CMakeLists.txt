cmake_minimum_required(VERSION 2.8.12)
project(Coin)
set (COIN_VERSION "4.0.0a")

option(SHARED "Build shared library when ON, static when OFF." ON)
if(SHARED)
	SET(BUILD_SHARED_LIBS ON)
endif()
set(CMAKE_DEBUG_POSTFIX "d")

if(WIN32)
  add_definitions(-DHAVE_WINDOWS_H)
  set(HAVE_WIN32_API 1)
elseif(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "-framework CoreFoundation")
else()
  add_compile_options(-fPIC)
endif()
include_directories(${CMAKE_BINARY_DIR}/include)

include(CheckIncludeFile)
check_include_file(dlfcn.h HAVE_DLFCN_H)
check_include_file(inttypes.h HAVE_INTTYPES_H)
check_include_file(unistd.h HAVE_UNISTD_H)
check_include_file(sys/time.h HAVE_SYS_TIME_H)
check_include_file(io.h HAVE_IO_H)
check_include_file(libgen.h HAVE_LIBGEN_H)
check_include_file(sys/param.h HAVE_SYS_PARAM_H)

include(CheckLibraryExists)
check_library_exists(dl dlopen "" HAVE_DL_LIB)
check_library_exists(GL glXChooseVisual "" HAVE_GLX)
check_library_exists(pthread pthread_create "" USE_PTHREAD)

include(CheckSymbolExists)
check_symbol_exists(GetEnvironmentVariable windows.h HAVE_GETENVIRONMENTVARIABLE)
if(NOT USE_PTHREAD)
check_symbol_exists(CreateThread windows.h USE_W32THREAD)
endif()
check_symbol_exists(va_copy stdarg.h HAVE_VA_COPY_MACRO)
check_symbol_exists(strncasecmp string.h HAVE_STRNCASECMP)
check_symbol_exists(gettimeofday sys/time.h HAVE_GETTIMEOFDAY)
check_symbol_exists(getcwd unistd.h HAVE_GETCWD)
check_symbol_exists(isinf math.h HAVE_ISINF)
check_symbol_exists(isnan math.h HAVE_ISNAN)
check_symbol_exists(finite math.h HAVE_FINITE)
check_symbol_exists(__builtin_expect assert.h HAVE___BUILTIN_EXPECT)
check_symbol_exists(ilogb math.h HAVE_ILOGB)

check_symbol_exists(__func__ "" FUNC)
check_symbol_exists(__PRETTY_FUNCTION__ "" PRETTY_FUNCTION)
check_symbol_exists(__FUNCTION__ "" FUNCTION)
if(FUNC)
set(HAVE_CPP_COMPILER_FUNCTION_NAME_VAR __func__)
elseif(PRETTY_FUNCTION)
set(HAVE_CPP_COMPILER_FUNCTION_NAME_VAR __PRETTY_FUNCTION__)
elseif(FUNCTION)
set(HAVE_CPP_COMPILER_FUNCTION_NAME_VAR __FUNCTION__)
endif()

if(NOT HAVE_UNISTD_H)
add_definitions(-DYY_NO_UNISTD_H)
endif()

add_subdirectory(include)
add_subdirectory(src)
