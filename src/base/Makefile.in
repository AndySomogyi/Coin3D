# Makefile.in generated by automake 1.7.5 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_3DS_CAPABILITIES_FALSE = @BUILD_3DS_CAPABILITIES_FALSE@
BUILD_3DS_CAPABILITIES_TRUE = @BUILD_3DS_CAPABILITIES_TRUE@
BUILD_HTMLPAGES_FALSE = @BUILD_HTMLPAGES_FALSE@
BUILD_HTMLPAGES_TRUE = @BUILD_HTMLPAGES_TRUE@
BUILD_JAVA_WRAPPER_FALSE = @BUILD_JAVA_WRAPPER_FALSE@
BUILD_JAVA_WRAPPER_TRUE = @BUILD_JAVA_WRAPPER_TRUE@
BUILD_LIBRARY_FALSE = @BUILD_LIBRARY_FALSE@
BUILD_LIBRARY_TRUE = @BUILD_LIBRARY_TRUE@
BUILD_MANPAGES_FALSE = @BUILD_MANPAGES_FALSE@
BUILD_MANPAGES_TRUE = @BUILD_MANPAGES_TRUE@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
BUILD_WITH_MSVC_FALSE = @BUILD_WITH_MSVC_FALSE@
BUILD_WITH_MSVC_TRUE = @BUILD_WITH_MSVC_TRUE@
BUILD_WITH_SOUND_FALSE = @BUILD_WITH_SOUND_FALSE@
BUILD_WITH_SOUND_TRUE = @BUILD_WITH_SOUND_TRUE@
BUILD_WITH_SUPERGLU_FALSE = @BUILD_WITH_SUPERGLU_FALSE@
BUILD_WITH_SUPERGLU_TRUE = @BUILD_WITH_SUPERGLU_TRUE@
BUILD_WITH_THREADS_FALSE = @BUILD_WITH_THREADS_FALSE@
BUILD_WITH_THREADS_TRUE = @BUILD_WITH_THREADS_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COIN_BETA_VERSION = @COIN_BETA_VERSION@
COIN_COMPILER = @COIN_COMPILER@
COIN_DOC_HTML = @COIN_DOC_HTML@
COIN_DOC_MAN = @COIN_DOC_MAN@
COIN_DSP_DEFS = @COIN_DSP_DEFS@
COIN_DSP_INCS = @COIN_DSP_INCS@
COIN_DSP_LIBS = @COIN_DSP_LIBS@
COIN_EXTRA_CFLAGS = @COIN_EXTRA_CFLAGS@
COIN_EXTRA_CPPFLAGS = @COIN_EXTRA_CPPFLAGS@
COIN_EXTRA_CXXFLAGS = @COIN_EXTRA_CXXFLAGS@
COIN_EXTRA_LDFLAGS = @COIN_EXTRA_LDFLAGS@
COIN_EXTRA_LIBS = @COIN_EXTRA_LIBS@
COIN_HACKING_LIBDIRS = @COIN_HACKING_LIBDIRS@
COIN_LIB_DSP_DEFS = @COIN_LIB_DSP_DEFS@
COIN_MAJOR_VERSION = @COIN_MAJOR_VERSION@
COIN_MICRO_VERSION = @COIN_MICRO_VERSION@
COIN_MINOR_VERSION = @COIN_MINOR_VERSION@
COIN_MSVC_LIBC = @COIN_MSVC_LIBC@
COIN_SO_VERSION = @COIN_SO_VERSION@
COIN_TESTSUITE_EXTRA_CPPFLAGS = @COIN_TESTSUITE_EXTRA_CPPFLAGS@
COIN_TESTSUITE_EXTRA_LDFLAGS = @COIN_TESTSUITE_EXTRA_LDFLAGS@
COIN_VERSION = @COIN_VERSION@
CONFIG = @CONFIG@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEB_PACKAGEABLE_FALSE = @DEB_PACKAGEABLE_FALSE@
DEB_PACKAGEABLE_TRUE = @DEB_PACKAGEABLE_TRUE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN_INPUT = @DOXYGEN_INPUT@
DSUFFIX = @DSUFFIX@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
HACKING_COMPACT_BUILD_FALSE = @HACKING_COMPACT_BUILD_FALSE@
HACKING_COMPACT_BUILD_TRUE = @HACKING_COMPACT_BUILD_TRUE@
HACKING_DYNAMIC_MODULES_FALSE = @HACKING_DYNAMIC_MODULES_FALSE@
HACKING_DYNAMIC_MODULES_TRUE = @HACKING_DYNAMIC_MODULES_TRUE@
HAVE_3DS_IMPORT_CAPABILITIES = @HAVE_3DS_IMPORT_CAPABILITIES@
HAVE_DRAGGERS = @HAVE_DRAGGERS@
HAVE_FONTCONFIG_FALSE = @HAVE_FONTCONFIG_FALSE@
HAVE_FONTCONFIG_TRUE = @HAVE_FONTCONFIG_TRUE@
HAVE_FREETYPE_FALSE = @HAVE_FREETYPE_FALSE@
HAVE_FREETYPE_TRUE = @HAVE_FREETYPE_TRUE@
HAVE_JAVASCRIPT = @HAVE_JAVASCRIPT@
HAVE_MANIPULATORS = @HAVE_MANIPULATORS@
HAVE_NODEKITS = @HAVE_NODEKITS@
HAVE_SOUND = @HAVE_SOUND@
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_FALSE = @HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_FALSE@
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_TRUE = @HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_TRUE@
HAVE_SUPERGLU = @HAVE_SUPERGLU@
HAVE_THREADS = @HAVE_THREADS@
HAVE_THREADSAFE = @HAVE_THREADSAFE@
HAVE_VRML97 = @HAVE_VRML97@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBEXT = @LIBEXT@
LIBFLAGS = @LIBFLAGS@
LIBOBJS = @LIBOBJS@

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MACOSX_10_2FF = @MACOSX_10_2FF@
MACOSX_10_2FF_FALSE = @MACOSX_10_2FF_FALSE@
MACOSX_10_2FF_TRUE = @MACOSX_10_2FF_TRUE@
MACOSX_10_3FF_FALSE = @MACOSX_10_3FF_FALSE@
MACOSX_10_3FF_TRUE = @MACOSX_10_3FF_TRUE@
MACOSX_DEPLOYMENT_TARGET = @MACOSX_DEPLOYMENT_TARGET@
MACOSX_FALSE = @MACOSX_FALSE@
MACOSX_NAME = @MACOSX_NAME@
MACOSX_PACKAGEABLE_FALSE = @MACOSX_PACKAGEABLE_FALSE@
MACOSX_PACKAGEABLE_TRUE = @MACOSX_PACKAGEABLE_TRUE@
MACOSX_TRUE = @MACOSX_TRUE@
MACOSX_USE_DYNAMIC_LOOKUP_FALSE = @MACOSX_USE_DYNAMIC_LOOKUP_FALSE@
MACOSX_USE_DYNAMIC_LOOKUP_TRUE = @MACOSX_USE_DYNAMIC_LOOKUP_TRUE@
MAC_FRAMEWORK = @MAC_FRAMEWORK@
MAC_FRAMEWORK_FALSE = @MAC_FRAMEWORK_FALSE@
MAC_FRAMEWORK_NAME = @MAC_FRAMEWORK_NAME@
MAC_FRAMEWORK_PREFIX = @MAC_FRAMEWORK_PREFIX@
MAC_FRAMEWORK_TRUE = @MAC_FRAMEWORK_TRUE@
MAC_FRAMEWORK_VERSION = @MAC_FRAMEWORK_VERSION@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RFC822_DATE = @RFC822_DATE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIM_INCLUDE_GLEXT_H = @SIM_INCLUDE_GLEXT_H@
SIM_INCLUDE_GLU_H = @SIM_INCLUDE_GLU_H@
SIM_INCLUDE_GL_H = @SIM_INCLUDE_GL_H@
SIM_INCLUDE_WINDOWS_H = @SIM_INCLUDE_WINDOWS_H@
STRIP = @STRIP@
SUFFIX = @SUFFIX@
SUPERGLUPREFIX = @SUPERGLUPREFIX@
USE_SYSTEM_EXPAT_FALSE = @USE_SYSTEM_EXPAT_FALSE@
USE_SYSTEM_EXPAT_TRUE = @USE_SYSTEM_EXPAT_TRUE@
VERSION = @VERSION@
WIN_PACKAGEABLE_FALSE = @WIN_PACKAGEABLE_FALSE@
WIN_PACKAGEABLE_TRUE = @WIN_PACKAGEABLE_TRUE@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_compiler_gnu = @ac_compiler_gnu@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_unique_file = @ac_unique_file@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
cmp_avail = @cmp_avail@
coin_build_dir = @coin_build_dir@
coin_configure_date = @coin_configure_date@
coin_html_dir = @coin_html_dir@
coin_man_dir = @coin_man_dir@
coin_src_dir = @coin_src_dir@
coin_w32_build_dir = @coin_w32_build_dir@
coin_w32_src_dir = @coin_w32_src_dir@
datadir = @datadir@
exec_prefix = @exec_prefix@
frameworkdir = @frameworkdir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
ivincludedir = @ivincludedir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
nop = @nop@
oldincludedir = @oldincludedir@
path_tag = @path_tag@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sim_ac_doxygen_exe = @sim_ac_doxygen_exe@
sim_ac_dpkg_buildpackage_exe = @sim_ac_dpkg_buildpackage_exe@
sim_ac_makensis_exe = @sim_ac_makensis_exe@
sim_ac_packagemaker_app = @sim_ac_packagemaker_app@
sim_ac_perl_exe = @sim_ac_perl_exe@
sim_ac_relative_src_dir = @sim_ac_relative_src_dir@
sim_ac_relative_src_dir_p = @sim_ac_relative_src_dir_p@
sim_ac_simage_configcmd = @sim_ac_simage_configcmd@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
RegularSources = \
	dict.cpp \
	hash.cpp \
	heap.cpp \
        list.cpp \
	memalloc.cpp \
	rbptree.cpp \
	time.cpp \
	string.cpp \
	dynarray.cpp \
	namemap.cpp \
	SbBSPTree.cpp \
	SbByteBuffer.cpp \
	SbBox2s.cpp \
	SbBox2i32.cpp \
	SbBox2f.cpp \
	SbBox2d.cpp \
	SbBox3s.cpp \
	SbBox3i32.cpp \
	SbBox3f.cpp \
	SbBox3d.cpp \
	SbClip.cpp \
	SbColor.cpp \
	SbColor4f.cpp \
	SbCylinder.cpp \
	SbDict.cpp \
	SbDPLine.cpp \
	SbDPMatrix.cpp \
	SbDPPlane.cpp \
	SbDPRotation.cpp \
	SbHeap.cpp \
	SbImage.cpp \
	SbLine.cpp \
	SbMatrix.cpp \
	SbName.cpp \
	SbOctTree.cpp \
	SbPlane.cpp \
	SbRotation.cpp \
	SbSphere.cpp \
	SbString.cpp \
	SbTesselator.cpp \
	SbGLUTessellator.cpp \
	SbTime.cpp \
	SbVec2b.cpp \
	SbVec2ub.cpp \
	SbVec2s.cpp \
	SbVec2us.cpp \
	SbVec2i32.cpp \
	SbVec2ui32.cpp \
	SbVec2f.cpp \
	SbVec2d.cpp \
	SbVec3b.cpp \
	SbVec3ub.cpp \
	SbVec3s.cpp \
	SbVec3us.cpp \
	SbVec3i32.cpp \
	SbVec3ui32.cpp \
	SbVec3f.cpp \
	SbVec3d.cpp \
	SbVec4b.cpp \
	SbVec4ub.cpp \
	SbVec4s.cpp \
	SbVec4us.cpp \
	SbVec4i32.cpp \
	SbVec4ui32.cpp \
	SbVec4f.cpp \
	SbVec4d.cpp \
	SbViewVolume.cpp \
	SbDPViewVolume.cpp \
	SbViewportRegion.cpp \
	SbXfBox3f.cpp \
	SbXfBox3d.cpp


LinkHackSources = \
	all-base-cpp.cpp


PublicHeaders = 

PrivateHeaders = \
        dict.h \
	dictp.h \
        dynarray.h \
	hashp.h \
	heapp.h \
        namemap.h \
	SbGLUTessellator.h


ObsoleteHeaders = 


# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.
DISTCLEANFILES = \
	ii_files/*.ii

@HACKING_COMPACT_BUILD_FALSE@BuildSources = $(RegularSources)

@HACKING_COMPACT_BUILD_TRUE@BuildSources = $(LinkHackSources)
@HACKING_COMPACT_BUILD_FALSE@ExtraSources = $(LinkHackSources)
@HACKING_COMPACT_BUILD_TRUE@ExtraSources = $(RegularSources)

@BUILD_WITH_MSVC_TRUE@noinst_LIBRARIES = base.lst
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_TRUE@lib_LTLIBRARIES = libbase@SUFFIX@LINKHACK.la
@BUILD_WITH_MSVC_FALSE@@HACKING_DYNAMIC_MODULES_FALSE@noinst_LTLIBRARIES = libbase.la

DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include $(ExtraIncludeDirs) -I$(top_builddir)/src -I$(top_srcdir)/src

# header installation
@MAC_FRAMEWORK_TRUE@libbaseincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers/base
@MAC_FRAMEWORK_FALSE@libbaseincdir = $(includedir)/Inventor/base
# hack to change libdir value when installing Mac OS X compiler framework
@MAC_FRAMEWORK_TRUE@lib@nop@dir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
libbaseinc_HEADERS = $(PublicHeaders)

libbase_la_SOURCES = $(BuildSources)
EXTRA_libbase_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)


libbase_la_CXXFLAGS = $(AM_CXXFLAGS)
libbase_la_CFLAGS = $(AM_CFLAGS)

libbase@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libbase@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)


base_lst_SOURCES = $(BuildSources)
EXTRA_base_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)


base_lst_CXXFLAGS = $(AM_CXXFLAGS)
base_lst_CFLAGS = $(AM_CFLAGS)
subdir = src/base
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/discard.h \
	$(top_builddir)/src/config.h $(top_builddir)/src/setup.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

base_lst_AR = $(AR) cru
base_lst_LIBADD =
am__base_lst_SOURCES_DIST = dict.cpp hash.cpp heap.cpp list.cpp \
	memalloc.cpp rbptree.cpp time.cpp string.cpp dynarray.cpp \
	namemap.cpp SbBSPTree.cpp SbByteBuffer.cpp SbBox2s.cpp \
	SbBox2i32.cpp SbBox2f.cpp SbBox2d.cpp SbBox3s.cpp SbBox3i32.cpp \
	SbBox3f.cpp SbBox3d.cpp SbClip.cpp SbColor.cpp SbColor4f.cpp \
	SbCylinder.cpp SbDict.cpp SbDPLine.cpp SbDPMatrix.cpp \
	SbDPPlane.cpp SbDPRotation.cpp SbHeap.cpp SbImage.cpp \
	SbLine.cpp SbMatrix.cpp SbName.cpp SbOctTree.cpp SbPlane.cpp \
	SbRotation.cpp SbSphere.cpp SbString.cpp SbTesselator.cpp \
	SbGLUTessellator.cpp SbTime.cpp SbVec2b.cpp SbVec2ub.cpp \
	SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp SbVec2ui32.cpp \
	SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp SbVec3s.cpp \
	SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp SbVec3f.cpp \
	SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp SbVec4us.cpp \
	SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp SbVec4d.cpp \
	SbViewVolume.cpp SbDPViewVolume.cpp SbViewportRegion.cpp \
	SbXfBox3f.cpp SbXfBox3d.cpp all-base-cpp.cpp
am__objects_1 = base_lst-all-base-cpp.$(OBJEXT)
am__objects_2 = base_lst-dict.$(OBJEXT) base_lst-hash.$(OBJEXT) \
	base_lst-heap.$(OBJEXT) base_lst-list.$(OBJEXT) \
	base_lst-memalloc.$(OBJEXT) base_lst-rbptree.$(OBJEXT) \
	base_lst-time.$(OBJEXT) base_lst-string.$(OBJEXT) \
	base_lst-dynarray.$(OBJEXT) base_lst-namemap.$(OBJEXT) \
	base_lst-SbBSPTree.$(OBJEXT) base_lst-SbByteBuffer.$(OBJEXT) \
	base_lst-SbBox2s.$(OBJEXT) base_lst-SbBox2i32.$(OBJEXT) \
	base_lst-SbBox2f.$(OBJEXT) base_lst-SbBox2d.$(OBJEXT) \
	base_lst-SbBox3s.$(OBJEXT) base_lst-SbBox3i32.$(OBJEXT) \
	base_lst-SbBox3f.$(OBJEXT) base_lst-SbBox3d.$(OBJEXT) \
	base_lst-SbClip.$(OBJEXT) base_lst-SbColor.$(OBJEXT) \
	base_lst-SbColor4f.$(OBJEXT) base_lst-SbCylinder.$(OBJEXT) \
	base_lst-SbDict.$(OBJEXT) base_lst-SbDPLine.$(OBJEXT) \
	base_lst-SbDPMatrix.$(OBJEXT) base_lst-SbDPPlane.$(OBJEXT) \
	base_lst-SbDPRotation.$(OBJEXT) base_lst-SbHeap.$(OBJEXT) \
	base_lst-SbImage.$(OBJEXT) base_lst-SbLine.$(OBJEXT) \
	base_lst-SbMatrix.$(OBJEXT) base_lst-SbName.$(OBJEXT) \
	base_lst-SbOctTree.$(OBJEXT) base_lst-SbPlane.$(OBJEXT) \
	base_lst-SbRotation.$(OBJEXT) base_lst-SbSphere.$(OBJEXT) \
	base_lst-SbString.$(OBJEXT) base_lst-SbTesselator.$(OBJEXT) \
	base_lst-SbGLUTessellator.$(OBJEXT) base_lst-SbTime.$(OBJEXT) \
	base_lst-SbVec2b.$(OBJEXT) base_lst-SbVec2ub.$(OBJEXT) \
	base_lst-SbVec2s.$(OBJEXT) base_lst-SbVec2us.$(OBJEXT) \
	base_lst-SbVec2i32.$(OBJEXT) base_lst-SbVec2ui32.$(OBJEXT) \
	base_lst-SbVec2f.$(OBJEXT) base_lst-SbVec2d.$(OBJEXT) \
	base_lst-SbVec3b.$(OBJEXT) base_lst-SbVec3ub.$(OBJEXT) \
	base_lst-SbVec3s.$(OBJEXT) base_lst-SbVec3us.$(OBJEXT) \
	base_lst-SbVec3i32.$(OBJEXT) base_lst-SbVec3ui32.$(OBJEXT) \
	base_lst-SbVec3f.$(OBJEXT) base_lst-SbVec3d.$(OBJEXT) \
	base_lst-SbVec4b.$(OBJEXT) base_lst-SbVec4ub.$(OBJEXT) \
	base_lst-SbVec4s.$(OBJEXT) base_lst-SbVec4us.$(OBJEXT) \
	base_lst-SbVec4i32.$(OBJEXT) base_lst-SbVec4ui32.$(OBJEXT) \
	base_lst-SbVec4f.$(OBJEXT) base_lst-SbVec4d.$(OBJEXT) \
	base_lst-SbViewVolume.$(OBJEXT) \
	base_lst-SbDPViewVolume.$(OBJEXT) \
	base_lst-SbViewportRegion.$(OBJEXT) \
	base_lst-SbXfBox3f.$(OBJEXT) base_lst-SbXfBox3d.$(OBJEXT)
@HACKING_COMPACT_BUILD_TRUE@am__objects_3 = $(am__objects_1)
@HACKING_COMPACT_BUILD_FALSE@am__objects_3 = $(am__objects_2)
am_base_lst_OBJECTS = $(am__objects_3)
am__EXTRA_base_lst_SOURCES_DIST = dict.h dictp.h dynarray.h hashp.h \
	heapp.h namemap.h SbGLUTessellator.h all-base-cpp.cpp dict.cpp \
	hash.cpp heap.cpp list.cpp memalloc.cpp rbptree.cpp time.cpp \
	string.cpp dynarray.cpp namemap.cpp SbBSPTree.cpp \
	SbByteBuffer.cpp SbBox2s.cpp SbBox2i32.cpp SbBox2f.cpp \
	SbBox2d.cpp SbBox3s.cpp SbBox3i32.cpp SbBox3f.cpp SbBox3d.cpp \
	SbClip.cpp SbColor.cpp SbColor4f.cpp SbCylinder.cpp SbDict.cpp \
	SbDPLine.cpp SbDPMatrix.cpp SbDPPlane.cpp SbDPRotation.cpp \
	SbHeap.cpp SbImage.cpp SbLine.cpp SbMatrix.cpp SbName.cpp \
	SbOctTree.cpp SbPlane.cpp SbRotation.cpp SbSphere.cpp \
	SbString.cpp SbTesselator.cpp SbGLUTessellator.cpp SbTime.cpp \
	SbVec2b.cpp SbVec2ub.cpp SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp \
	SbVec2ui32.cpp SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp \
	SbVec3s.cpp SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp \
	SbVec3f.cpp SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp \
	SbVec4us.cpp SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp \
	SbVec4d.cpp SbViewVolume.cpp SbDPViewVolume.cpp \
	SbViewportRegion.cpp SbXfBox3f.cpp SbXfBox3d.cpp
base_lst_OBJECTS = $(am_base_lst_OBJECTS)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

libbase_la_LDFLAGS =
libbase_la_LIBADD =
am__libbase_la_SOURCES_DIST = dict.cpp hash.cpp heap.cpp list.cpp \
	memalloc.cpp rbptree.cpp time.cpp string.cpp dynarray.cpp \
	namemap.cpp SbBSPTree.cpp SbByteBuffer.cpp SbBox2s.cpp \
	SbBox2i32.cpp SbBox2f.cpp SbBox2d.cpp SbBox3s.cpp SbBox3i32.cpp \
	SbBox3f.cpp SbBox3d.cpp SbClip.cpp SbColor.cpp SbColor4f.cpp \
	SbCylinder.cpp SbDict.cpp SbDPLine.cpp SbDPMatrix.cpp \
	SbDPPlane.cpp SbDPRotation.cpp SbHeap.cpp SbImage.cpp \
	SbLine.cpp SbMatrix.cpp SbName.cpp SbOctTree.cpp SbPlane.cpp \
	SbRotation.cpp SbSphere.cpp SbString.cpp SbTesselator.cpp \
	SbGLUTessellator.cpp SbTime.cpp SbVec2b.cpp SbVec2ub.cpp \
	SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp SbVec2ui32.cpp \
	SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp SbVec3s.cpp \
	SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp SbVec3f.cpp \
	SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp SbVec4us.cpp \
	SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp SbVec4d.cpp \
	SbViewVolume.cpp SbDPViewVolume.cpp SbViewportRegion.cpp \
	SbXfBox3f.cpp SbXfBox3d.cpp all-base-cpp.cpp
am__objects_6 = libbase_la-all-base-cpp.lo
am__objects_7 = libbase_la-dict.lo libbase_la-hash.lo libbase_la-heap.lo \
	libbase_la-list.lo libbase_la-memalloc.lo libbase_la-rbptree.lo \
	libbase_la-time.lo libbase_la-string.lo libbase_la-dynarray.lo \
	libbase_la-namemap.lo libbase_la-SbBSPTree.lo \
	libbase_la-SbByteBuffer.lo libbase_la-SbBox2s.lo \
	libbase_la-SbBox2i32.lo libbase_la-SbBox2f.lo \
	libbase_la-SbBox2d.lo libbase_la-SbBox3s.lo \
	libbase_la-SbBox3i32.lo libbase_la-SbBox3f.lo \
	libbase_la-SbBox3d.lo libbase_la-SbClip.lo \
	libbase_la-SbColor.lo libbase_la-SbColor4f.lo \
	libbase_la-SbCylinder.lo libbase_la-SbDict.lo \
	libbase_la-SbDPLine.lo libbase_la-SbDPMatrix.lo \
	libbase_la-SbDPPlane.lo libbase_la-SbDPRotation.lo \
	libbase_la-SbHeap.lo libbase_la-SbImage.lo libbase_la-SbLine.lo \
	libbase_la-SbMatrix.lo libbase_la-SbName.lo \
	libbase_la-SbOctTree.lo libbase_la-SbPlane.lo \
	libbase_la-SbRotation.lo libbase_la-SbSphere.lo \
	libbase_la-SbString.lo libbase_la-SbTesselator.lo \
	libbase_la-SbGLUTessellator.lo libbase_la-SbTime.lo \
	libbase_la-SbVec2b.lo libbase_la-SbVec2ub.lo \
	libbase_la-SbVec2s.lo libbase_la-SbVec2us.lo \
	libbase_la-SbVec2i32.lo libbase_la-SbVec2ui32.lo \
	libbase_la-SbVec2f.lo libbase_la-SbVec2d.lo \
	libbase_la-SbVec3b.lo libbase_la-SbVec3ub.lo \
	libbase_la-SbVec3s.lo libbase_la-SbVec3us.lo \
	libbase_la-SbVec3i32.lo libbase_la-SbVec3ui32.lo \
	libbase_la-SbVec3f.lo libbase_la-SbVec3d.lo \
	libbase_la-SbVec4b.lo libbase_la-SbVec4ub.lo \
	libbase_la-SbVec4s.lo libbase_la-SbVec4us.lo \
	libbase_la-SbVec4i32.lo libbase_la-SbVec4ui32.lo \
	libbase_la-SbVec4f.lo libbase_la-SbVec4d.lo \
	libbase_la-SbViewVolume.lo libbase_la-SbDPViewVolume.lo \
	libbase_la-SbViewportRegion.lo libbase_la-SbXfBox3f.lo \
	libbase_la-SbXfBox3d.lo
@HACKING_COMPACT_BUILD_TRUE@am__objects_8 = $(am__objects_6)
@HACKING_COMPACT_BUILD_FALSE@am__objects_8 = $(am__objects_7)
am_libbase_la_OBJECTS = $(am__objects_8)
am__EXTRA_libbase_la_SOURCES_DIST = dict.h dictp.h dynarray.h hashp.h \
	heapp.h namemap.h SbGLUTessellator.h all-base-cpp.cpp dict.cpp \
	hash.cpp heap.cpp list.cpp memalloc.cpp rbptree.cpp time.cpp \
	string.cpp dynarray.cpp namemap.cpp SbBSPTree.cpp \
	SbByteBuffer.cpp SbBox2s.cpp SbBox2i32.cpp SbBox2f.cpp \
	SbBox2d.cpp SbBox3s.cpp SbBox3i32.cpp SbBox3f.cpp SbBox3d.cpp \
	SbClip.cpp SbColor.cpp SbColor4f.cpp SbCylinder.cpp SbDict.cpp \
	SbDPLine.cpp SbDPMatrix.cpp SbDPPlane.cpp SbDPRotation.cpp \
	SbHeap.cpp SbImage.cpp SbLine.cpp SbMatrix.cpp SbName.cpp \
	SbOctTree.cpp SbPlane.cpp SbRotation.cpp SbSphere.cpp \
	SbString.cpp SbTesselator.cpp SbGLUTessellator.cpp SbTime.cpp \
	SbVec2b.cpp SbVec2ub.cpp SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp \
	SbVec2ui32.cpp SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp \
	SbVec3s.cpp SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp \
	SbVec3f.cpp SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp \
	SbVec4us.cpp SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp \
	SbVec4d.cpp SbViewVolume.cpp SbDPViewVolume.cpp \
	SbViewportRegion.cpp SbXfBox3f.cpp SbXfBox3d.cpp
libbase_la_OBJECTS = $(am_libbase_la_OBJECTS)
libbase@SUFFIX@LINKHACK_la_LDFLAGS =
libbase@SUFFIX@LINKHACK_la_LIBADD =
am__libbase@SUFFIX@LINKHACK_la_SOURCES_DIST = dict.cpp hash.cpp heap.cpp \
	list.cpp memalloc.cpp rbptree.cpp time.cpp string.cpp \
	dynarray.cpp namemap.cpp SbBSPTree.cpp SbByteBuffer.cpp \
	SbBox2s.cpp SbBox2i32.cpp SbBox2f.cpp SbBox2d.cpp SbBox3s.cpp \
	SbBox3i32.cpp SbBox3f.cpp SbBox3d.cpp SbClip.cpp SbColor.cpp \
	SbColor4f.cpp SbCylinder.cpp SbDict.cpp SbDPLine.cpp \
	SbDPMatrix.cpp SbDPPlane.cpp SbDPRotation.cpp SbHeap.cpp \
	SbImage.cpp SbLine.cpp SbMatrix.cpp SbName.cpp SbOctTree.cpp \
	SbPlane.cpp SbRotation.cpp SbSphere.cpp SbString.cpp \
	SbTesselator.cpp SbGLUTessellator.cpp SbTime.cpp SbVec2b.cpp \
	SbVec2ub.cpp SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp \
	SbVec2ui32.cpp SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp \
	SbVec3s.cpp SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp \
	SbVec3f.cpp SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp \
	SbVec4us.cpp SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp \
	SbVec4d.cpp SbViewVolume.cpp SbDPViewVolume.cpp \
	SbViewportRegion.cpp SbXfBox3f.cpp SbXfBox3d.cpp \
	all-base-cpp.cpp
am__objects_10 = all-base-cpp.lo
am__objects_11 = dict.lo hash.lo heap.lo list.lo memalloc.lo rbptree.lo \
	time.lo string.lo dynarray.lo namemap.lo SbBSPTree.lo \
	SbByteBuffer.lo SbBox2s.lo SbBox2i32.lo SbBox2f.lo SbBox2d.lo \
	SbBox3s.lo SbBox3i32.lo SbBox3f.lo SbBox3d.lo SbClip.lo \
	SbColor.lo SbColor4f.lo SbCylinder.lo SbDict.lo SbDPLine.lo \
	SbDPMatrix.lo SbDPPlane.lo SbDPRotation.lo SbHeap.lo SbImage.lo \
	SbLine.lo SbMatrix.lo SbName.lo SbOctTree.lo SbPlane.lo \
	SbRotation.lo SbSphere.lo SbString.lo SbTesselator.lo \
	SbGLUTessellator.lo SbTime.lo SbVec2b.lo SbVec2ub.lo SbVec2s.lo \
	SbVec2us.lo SbVec2i32.lo SbVec2ui32.lo SbVec2f.lo SbVec2d.lo \
	SbVec3b.lo SbVec3ub.lo SbVec3s.lo SbVec3us.lo SbVec3i32.lo \
	SbVec3ui32.lo SbVec3f.lo SbVec3d.lo SbVec4b.lo SbVec4ub.lo \
	SbVec4s.lo SbVec4us.lo SbVec4i32.lo SbVec4ui32.lo SbVec4f.lo \
	SbVec4d.lo SbViewVolume.lo SbDPViewVolume.lo \
	SbViewportRegion.lo SbXfBox3f.lo SbXfBox3d.lo
@HACKING_COMPACT_BUILD_TRUE@am__objects_12 = $(am__objects_10)
@HACKING_COMPACT_BUILD_FALSE@am__objects_12 = $(am__objects_11)
am_libbase@SUFFIX@LINKHACK_la_OBJECTS = $(am__objects_12)
am__EXTRA_libbase@SUFFIX@LINKHACK_la_SOURCES_DIST = dict.h dictp.h \
	dynarray.h hashp.h heapp.h namemap.h SbGLUTessellator.h \
	all-base-cpp.cpp dict.cpp hash.cpp heap.cpp list.cpp \
	memalloc.cpp rbptree.cpp time.cpp string.cpp dynarray.cpp \
	namemap.cpp SbBSPTree.cpp SbByteBuffer.cpp SbBox2s.cpp \
	SbBox2i32.cpp SbBox2f.cpp SbBox2d.cpp SbBox3s.cpp SbBox3i32.cpp \
	SbBox3f.cpp SbBox3d.cpp SbClip.cpp SbColor.cpp SbColor4f.cpp \
	SbCylinder.cpp SbDict.cpp SbDPLine.cpp SbDPMatrix.cpp \
	SbDPPlane.cpp SbDPRotation.cpp SbHeap.cpp SbImage.cpp \
	SbLine.cpp SbMatrix.cpp SbName.cpp SbOctTree.cpp SbPlane.cpp \
	SbRotation.cpp SbSphere.cpp SbString.cpp SbTesselator.cpp \
	SbGLUTessellator.cpp SbTime.cpp SbVec2b.cpp SbVec2ub.cpp \
	SbVec2s.cpp SbVec2us.cpp SbVec2i32.cpp SbVec2ui32.cpp \
	SbVec2f.cpp SbVec2d.cpp SbVec3b.cpp SbVec3ub.cpp SbVec3s.cpp \
	SbVec3us.cpp SbVec3i32.cpp SbVec3ui32.cpp SbVec3f.cpp \
	SbVec3d.cpp SbVec4b.cpp SbVec4ub.cpp SbVec4s.cpp SbVec4us.cpp \
	SbVec4i32.cpp SbVec4ui32.cpp SbVec4f.cpp SbVec4d.cpp \
	SbViewVolume.cpp SbDPViewVolume.cpp SbViewportRegion.cpp \
	SbXfBox3f.cpp SbXfBox3d.cpp
libbase@SUFFIX@LINKHACK_la_OBJECTS = \
	$(am_libbase@SUFFIX@LINKHACK_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/SbBSPTree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbBox2d.Plo ./$(DEPDIR)/SbBox2f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbBox2i32.Plo ./$(DEPDIR)/SbBox2s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbBox3d.Plo ./$(DEPDIR)/SbBox3f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbBox3i32.Plo ./$(DEPDIR)/SbBox3s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbByteBuffer.Plo ./$(DEPDIR)/SbClip.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbColor.Plo ./$(DEPDIR)/SbColor4f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbCylinder.Plo ./$(DEPDIR)/SbDPLine.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbDPMatrix.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbDPPlane.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbDPRotation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbDPViewVolume.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbDict.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbGLUTessellator.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbHeap.Plo ./$(DEPDIR)/SbImage.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbLine.Plo ./$(DEPDIR)/SbMatrix.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbName.Plo ./$(DEPDIR)/SbOctTree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbPlane.Plo ./$(DEPDIR)/SbRotation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbSphere.Plo ./$(DEPDIR)/SbString.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbTesselator.Plo ./$(DEPDIR)/SbTime.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec2b.Plo ./$(DEPDIR)/SbVec2d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec2f.Plo ./$(DEPDIR)/SbVec2i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec2s.Plo ./$(DEPDIR)/SbVec2ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec2ui32.Plo ./$(DEPDIR)/SbVec2us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec3b.Plo ./$(DEPDIR)/SbVec3d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec3f.Plo ./$(DEPDIR)/SbVec3i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec3s.Plo ./$(DEPDIR)/SbVec3ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec3ui32.Plo ./$(DEPDIR)/SbVec3us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec4b.Plo ./$(DEPDIR)/SbVec4d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec4f.Plo ./$(DEPDIR)/SbVec4i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec4s.Plo ./$(DEPDIR)/SbVec4ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbVec4ui32.Plo ./$(DEPDIR)/SbVec4us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbViewVolume.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbViewportRegion.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbXfBox3d.Plo ./$(DEPDIR)/SbXfBox3f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/all-base-cpp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBSPTree.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox2f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox2i32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox2s.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox3f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox3i32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbBox3s.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbByteBuffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbClip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbColor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbColor4f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbCylinder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDPLine.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDPMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDPPlane.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDPRotation.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDPViewVolume.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbDict.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbGLUTessellator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbHeap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbImage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbLine.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbName.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbOctTree.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbPlane.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbRotation.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbSphere.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbString.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbTesselator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbTime.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2b.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2i32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2s.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2ub.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2ui32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec2us.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3b.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3i32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3s.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3ub.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3ui32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec3us.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4b.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4i32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4s.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4ub.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4ui32.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbVec4us.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbViewVolume.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbViewportRegion.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbXfBox3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-SbXfBox3f.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-all-base-cpp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-dict.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-dynarray.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-hash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-heap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-list.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-memalloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-namemap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-rbptree.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-string.Po \
@AMDEP_TRUE@	./$(DEPDIR)/base_lst-time.Po ./$(DEPDIR)/dict.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/dynarray.Plo ./$(DEPDIR)/hash.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/heap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBSPTree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox2d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox2f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox2i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox2s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox3d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox3f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox3i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbBox3s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbByteBuffer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbClip.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbColor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbColor4f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbCylinder.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDPLine.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDPMatrix.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDPPlane.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDPRotation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDPViewVolume.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbDict.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbGLUTessellator.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbHeap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbImage.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbLine.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbMatrix.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbName.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbOctTree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbPlane.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbRotation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbSphere.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbString.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbTesselator.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbTime.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2b.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2ui32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec2us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3b.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3ui32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec3us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4b.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4i32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4s.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4ub.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4ui32.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbVec4us.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbViewVolume.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbViewportRegion.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbXfBox3d.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-SbXfBox3f.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-all-base-cpp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-dict.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-dynarray.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-hash.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-heap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-list.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-memalloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-namemap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-rbptree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-string.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libbase_la-time.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/list.Plo ./$(DEPDIR)/memalloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/namemap.Plo ./$(DEPDIR)/rbptree.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/string.Plo ./$(DEPDIR)/time.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(am__base_lst_SOURCES_DIST) \
	$(am__EXTRA_base_lst_SOURCES_DIST) \
	$(am__libbase_la_SOURCES_DIST) \
	$(am__EXTRA_libbase_la_SOURCES_DIST) \
	$(am__libbase@SUFFIX@LINKHACK_la_SOURCES_DIST) \
	$(am__EXTRA_libbase@SUFFIX@LINKHACK_la_SOURCES_DIST)
HEADERS = $(libbaseinc_HEADERS)

DIST_COMMON = $(libbaseinc_HEADERS) Makefile.am Makefile.in
SOURCES = $(base_lst_SOURCES) $(EXTRA_base_lst_SOURCES) $(libbase_la_SOURCES) $(EXTRA_libbase_la_SOURCES) $(libbase@SUFFIX@LINKHACK_la_SOURCES) $(EXTRA_libbase@SUFFIX@LINKHACK_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/base/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbase.la: $(libbase_la_OBJECTS) $(libbase_la_DEPENDENCIES) 
	$(CXXLINK)  $(libbase_la_LDFLAGS) $(libbase_la_OBJECTS) $(libbase_la_LIBADD) $(LIBS)
libbase@SUFFIX@LINKHACK.la: $(libbase@SUFFIX@LINKHACK_la_OBJECTS) $(libbase@SUFFIX@LINKHACK_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libbase@SUFFIX@LINKHACK_la_LDFLAGS) $(libbase@SUFFIX@LINKHACK_la_OBJECTS) $(libbase@SUFFIX@LINKHACK_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBSPTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox2d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox2f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox2i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox2s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox3i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbBox3s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbByteBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbClip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbColor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbColor4f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbCylinder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDPLine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDPMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDPPlane.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDPRotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDPViewVolume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbGLUTessellator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbHeap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbImage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbLine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbOctTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbPlane.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbRotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbSphere.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbString.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbTesselator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbTime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec2us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec3us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbVec4us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbViewVolume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbViewportRegion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbXfBox3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbXfBox3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/all-base-cpp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBSPTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox2f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox2i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox2s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox3f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox3i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbBox3s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbByteBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbClip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbColor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbColor4f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbCylinder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDPLine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDPMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDPPlane.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDPRotation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDPViewVolume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbDict.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbGLUTessellator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbHeap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbImage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbLine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbName.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbOctTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbPlane.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbRotation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbSphere.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbTesselator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbTime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2b.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2ub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec2us.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3b.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3ub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec3us.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4b.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4ub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbVec4us.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbViewVolume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbViewportRegion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbXfBox3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-SbXfBox3f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-all-base-cpp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-dict.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-dynarray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-heap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-memalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-namemap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-rbptree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_lst-time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynarray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBSPTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox2d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox2f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox2i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox2s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox3i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbBox3s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbByteBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbClip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbColor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbColor4f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbCylinder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDPLine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDPMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDPPlane.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDPRotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDPViewVolume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbGLUTessellator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbHeap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbImage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbLine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbOctTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbPlane.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbRotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbSphere.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbString.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbTesselator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbTime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec2us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec3us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4b.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4i32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4s.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4ub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4ui32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbVec4us.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbViewVolume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbViewportRegion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbXfBox3d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-SbXfBox3f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-all-base-cpp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-dict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-dynarray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-heap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-memalloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-namemap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-rbptree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-string.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbase_la-time.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memalloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/namemap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rbptree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

base_lst-all-base-cpp.o: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-all-base-cpp.o -MD -MP -MF "$(DEPDIR)/base_lst-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-all-base-cpp.o `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo" "$(DEPDIR)/base_lst-all-base-cpp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='base_lst-all-base-cpp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-all-base-cpp.Po' tmpdepfile='$(DEPDIR)/base_lst-all-base-cpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-all-base-cpp.o `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp

base_lst-all-base-cpp.obj: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-all-base-cpp.obj -MD -MP -MF "$(DEPDIR)/base_lst-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-all-base-cpp.obj `if test -f 'all-base-cpp.cpp'; then $(CYGPATH_W) 'all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/all-base-cpp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo" "$(DEPDIR)/base_lst-all-base-cpp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='base_lst-all-base-cpp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-all-base-cpp.Po' tmpdepfile='$(DEPDIR)/base_lst-all-base-cpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-all-base-cpp.obj `if test -f 'all-base-cpp.cpp'; then $(CYGPATH_W) 'all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/all-base-cpp.cpp'; fi`

base_lst-all-base-cpp.lo: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-all-base-cpp.lo -MD -MP -MF "$(DEPDIR)/base_lst-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-all-base-cpp.lo `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo" "$(DEPDIR)/base_lst-all-base-cpp.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='base_lst-all-base-cpp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-all-base-cpp.Plo' tmpdepfile='$(DEPDIR)/base_lst-all-base-cpp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-all-base-cpp.lo `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp

base_lst-dict.o: dict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dict.o -MD -MP -MF "$(DEPDIR)/base_lst-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dict.o `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dict.Tpo" "$(DEPDIR)/base_lst-dict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='base_lst-dict.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dict.Po' tmpdepfile='$(DEPDIR)/base_lst-dict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dict.o `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp

base_lst-dict.obj: dict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dict.obj -MD -MP -MF "$(DEPDIR)/base_lst-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dict.obj `if test -f 'dict.cpp'; then $(CYGPATH_W) 'dict.cpp'; else $(CYGPATH_W) '$(srcdir)/dict.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dict.Tpo" "$(DEPDIR)/base_lst-dict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='base_lst-dict.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dict.Po' tmpdepfile='$(DEPDIR)/base_lst-dict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dict.obj `if test -f 'dict.cpp'; then $(CYGPATH_W) 'dict.cpp'; else $(CYGPATH_W) '$(srcdir)/dict.cpp'; fi`

base_lst-dict.lo: dict.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dict.lo -MD -MP -MF "$(DEPDIR)/base_lst-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dict.lo `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dict.Tpo" "$(DEPDIR)/base_lst-dict.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='base_lst-dict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dict.Plo' tmpdepfile='$(DEPDIR)/base_lst-dict.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dict.lo `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp

base_lst-hash.o: hash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-hash.o -MD -MP -MF "$(DEPDIR)/base_lst-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-hash.Tpo" "$(DEPDIR)/base_lst-hash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='base_lst-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-hash.Po' tmpdepfile='$(DEPDIR)/base_lst-hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

base_lst-hash.obj: hash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-hash.obj -MD -MP -MF "$(DEPDIR)/base_lst-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-hash.Tpo" "$(DEPDIR)/base_lst-hash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='base_lst-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-hash.Po' tmpdepfile='$(DEPDIR)/base_lst-hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

base_lst-hash.lo: hash.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-hash.lo -MD -MP -MF "$(DEPDIR)/base_lst-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-hash.Tpo" "$(DEPDIR)/base_lst-hash.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='base_lst-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-hash.Plo' tmpdepfile='$(DEPDIR)/base_lst-hash.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

base_lst-heap.o: heap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-heap.o -MD -MP -MF "$(DEPDIR)/base_lst-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-heap.o `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-heap.Tpo" "$(DEPDIR)/base_lst-heap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='base_lst-heap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-heap.Po' tmpdepfile='$(DEPDIR)/base_lst-heap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-heap.o `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp

base_lst-heap.obj: heap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-heap.obj -MD -MP -MF "$(DEPDIR)/base_lst-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-heap.obj `if test -f 'heap.cpp'; then $(CYGPATH_W) 'heap.cpp'; else $(CYGPATH_W) '$(srcdir)/heap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-heap.Tpo" "$(DEPDIR)/base_lst-heap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='base_lst-heap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-heap.Po' tmpdepfile='$(DEPDIR)/base_lst-heap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-heap.obj `if test -f 'heap.cpp'; then $(CYGPATH_W) 'heap.cpp'; else $(CYGPATH_W) '$(srcdir)/heap.cpp'; fi`

base_lst-heap.lo: heap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-heap.lo -MD -MP -MF "$(DEPDIR)/base_lst-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-heap.lo `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-heap.Tpo" "$(DEPDIR)/base_lst-heap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='base_lst-heap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-heap.Plo' tmpdepfile='$(DEPDIR)/base_lst-heap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-heap.lo `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp

base_lst-list.o: list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-list.o -MD -MP -MF "$(DEPDIR)/base_lst-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-list.o `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-list.Tpo" "$(DEPDIR)/base_lst-list.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='base_lst-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-list.Po' tmpdepfile='$(DEPDIR)/base_lst-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-list.o `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp

base_lst-list.obj: list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-list.obj -MD -MP -MF "$(DEPDIR)/base_lst-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-list.obj `if test -f 'list.cpp'; then $(CYGPATH_W) 'list.cpp'; else $(CYGPATH_W) '$(srcdir)/list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-list.Tpo" "$(DEPDIR)/base_lst-list.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='base_lst-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-list.Po' tmpdepfile='$(DEPDIR)/base_lst-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-list.obj `if test -f 'list.cpp'; then $(CYGPATH_W) 'list.cpp'; else $(CYGPATH_W) '$(srcdir)/list.cpp'; fi`

base_lst-list.lo: list.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-list.lo -MD -MP -MF "$(DEPDIR)/base_lst-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-list.lo `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-list.Tpo" "$(DEPDIR)/base_lst-list.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='base_lst-list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-list.Plo' tmpdepfile='$(DEPDIR)/base_lst-list.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-list.lo `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp

base_lst-memalloc.o: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-memalloc.o -MD -MP -MF "$(DEPDIR)/base_lst-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-memalloc.o `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-memalloc.Tpo" "$(DEPDIR)/base_lst-memalloc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='base_lst-memalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-memalloc.Po' tmpdepfile='$(DEPDIR)/base_lst-memalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-memalloc.o `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp

base_lst-memalloc.obj: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-memalloc.obj -MD -MP -MF "$(DEPDIR)/base_lst-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-memalloc.obj `if test -f 'memalloc.cpp'; then $(CYGPATH_W) 'memalloc.cpp'; else $(CYGPATH_W) '$(srcdir)/memalloc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-memalloc.Tpo" "$(DEPDIR)/base_lst-memalloc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='base_lst-memalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-memalloc.Po' tmpdepfile='$(DEPDIR)/base_lst-memalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-memalloc.obj `if test -f 'memalloc.cpp'; then $(CYGPATH_W) 'memalloc.cpp'; else $(CYGPATH_W) '$(srcdir)/memalloc.cpp'; fi`

base_lst-memalloc.lo: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-memalloc.lo -MD -MP -MF "$(DEPDIR)/base_lst-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-memalloc.lo `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-memalloc.Tpo" "$(DEPDIR)/base_lst-memalloc.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='base_lst-memalloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-memalloc.Plo' tmpdepfile='$(DEPDIR)/base_lst-memalloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-memalloc.lo `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp

base_lst-rbptree.o: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-rbptree.o -MD -MP -MF "$(DEPDIR)/base_lst-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-rbptree.o `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-rbptree.Tpo" "$(DEPDIR)/base_lst-rbptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='base_lst-rbptree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-rbptree.Po' tmpdepfile='$(DEPDIR)/base_lst-rbptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-rbptree.o `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp

base_lst-rbptree.obj: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-rbptree.obj -MD -MP -MF "$(DEPDIR)/base_lst-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-rbptree.obj `if test -f 'rbptree.cpp'; then $(CYGPATH_W) 'rbptree.cpp'; else $(CYGPATH_W) '$(srcdir)/rbptree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-rbptree.Tpo" "$(DEPDIR)/base_lst-rbptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='base_lst-rbptree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-rbptree.Po' tmpdepfile='$(DEPDIR)/base_lst-rbptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-rbptree.obj `if test -f 'rbptree.cpp'; then $(CYGPATH_W) 'rbptree.cpp'; else $(CYGPATH_W) '$(srcdir)/rbptree.cpp'; fi`

base_lst-rbptree.lo: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-rbptree.lo -MD -MP -MF "$(DEPDIR)/base_lst-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-rbptree.lo `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-rbptree.Tpo" "$(DEPDIR)/base_lst-rbptree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='base_lst-rbptree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-rbptree.Plo' tmpdepfile='$(DEPDIR)/base_lst-rbptree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-rbptree.lo `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp

base_lst-time.o: time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-time.o -MD -MP -MF "$(DEPDIR)/base_lst-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-time.o `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-time.Tpo" "$(DEPDIR)/base_lst-time.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='base_lst-time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-time.Po' tmpdepfile='$(DEPDIR)/base_lst-time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-time.o `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp

base_lst-time.obj: time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-time.obj -MD -MP -MF "$(DEPDIR)/base_lst-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-time.obj `if test -f 'time.cpp'; then $(CYGPATH_W) 'time.cpp'; else $(CYGPATH_W) '$(srcdir)/time.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-time.Tpo" "$(DEPDIR)/base_lst-time.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='base_lst-time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-time.Po' tmpdepfile='$(DEPDIR)/base_lst-time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-time.obj `if test -f 'time.cpp'; then $(CYGPATH_W) 'time.cpp'; else $(CYGPATH_W) '$(srcdir)/time.cpp'; fi`

base_lst-time.lo: time.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-time.lo -MD -MP -MF "$(DEPDIR)/base_lst-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-time.Tpo" "$(DEPDIR)/base_lst-time.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='base_lst-time.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-time.Plo' tmpdepfile='$(DEPDIR)/base_lst-time.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp

base_lst-string.o: string.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-string.o -MD -MP -MF "$(DEPDIR)/base_lst-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-string.o `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-string.Tpo" "$(DEPDIR)/base_lst-string.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='base_lst-string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-string.Po' tmpdepfile='$(DEPDIR)/base_lst-string.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-string.o `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp

base_lst-string.obj: string.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-string.obj -MD -MP -MF "$(DEPDIR)/base_lst-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-string.obj `if test -f 'string.cpp'; then $(CYGPATH_W) 'string.cpp'; else $(CYGPATH_W) '$(srcdir)/string.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-string.Tpo" "$(DEPDIR)/base_lst-string.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='base_lst-string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-string.Po' tmpdepfile='$(DEPDIR)/base_lst-string.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-string.obj `if test -f 'string.cpp'; then $(CYGPATH_W) 'string.cpp'; else $(CYGPATH_W) '$(srcdir)/string.cpp'; fi`

base_lst-string.lo: string.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-string.lo -MD -MP -MF "$(DEPDIR)/base_lst-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-string.lo `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-string.Tpo" "$(DEPDIR)/base_lst-string.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='base_lst-string.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-string.Plo' tmpdepfile='$(DEPDIR)/base_lst-string.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-string.lo `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp

base_lst-dynarray.o: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dynarray.o -MD -MP -MF "$(DEPDIR)/base_lst-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dynarray.o `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dynarray.Tpo" "$(DEPDIR)/base_lst-dynarray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='base_lst-dynarray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dynarray.Po' tmpdepfile='$(DEPDIR)/base_lst-dynarray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dynarray.o `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp

base_lst-dynarray.obj: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dynarray.obj -MD -MP -MF "$(DEPDIR)/base_lst-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dynarray.obj `if test -f 'dynarray.cpp'; then $(CYGPATH_W) 'dynarray.cpp'; else $(CYGPATH_W) '$(srcdir)/dynarray.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dynarray.Tpo" "$(DEPDIR)/base_lst-dynarray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='base_lst-dynarray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dynarray.Po' tmpdepfile='$(DEPDIR)/base_lst-dynarray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dynarray.obj `if test -f 'dynarray.cpp'; then $(CYGPATH_W) 'dynarray.cpp'; else $(CYGPATH_W) '$(srcdir)/dynarray.cpp'; fi`

base_lst-dynarray.lo: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-dynarray.lo -MD -MP -MF "$(DEPDIR)/base_lst-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-dynarray.lo `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-dynarray.Tpo" "$(DEPDIR)/base_lst-dynarray.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='base_lst-dynarray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-dynarray.Plo' tmpdepfile='$(DEPDIR)/base_lst-dynarray.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-dynarray.lo `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp

base_lst-namemap.o: namemap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-namemap.o -MD -MP -MF "$(DEPDIR)/base_lst-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-namemap.o `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-namemap.Tpo" "$(DEPDIR)/base_lst-namemap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='base_lst-namemap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-namemap.Po' tmpdepfile='$(DEPDIR)/base_lst-namemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-namemap.o `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp

base_lst-namemap.obj: namemap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-namemap.obj -MD -MP -MF "$(DEPDIR)/base_lst-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-namemap.obj `if test -f 'namemap.cpp'; then $(CYGPATH_W) 'namemap.cpp'; else $(CYGPATH_W) '$(srcdir)/namemap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-namemap.Tpo" "$(DEPDIR)/base_lst-namemap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='base_lst-namemap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-namemap.Po' tmpdepfile='$(DEPDIR)/base_lst-namemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-namemap.obj `if test -f 'namemap.cpp'; then $(CYGPATH_W) 'namemap.cpp'; else $(CYGPATH_W) '$(srcdir)/namemap.cpp'; fi`

base_lst-namemap.lo: namemap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-namemap.lo -MD -MP -MF "$(DEPDIR)/base_lst-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-namemap.lo `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-namemap.Tpo" "$(DEPDIR)/base_lst-namemap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='base_lst-namemap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-namemap.Plo' tmpdepfile='$(DEPDIR)/base_lst-namemap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-namemap.lo `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp

base_lst-SbBSPTree.o: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBSPTree.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBSPTree.o `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo" "$(DEPDIR)/base_lst-SbBSPTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='base_lst-SbBSPTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBSPTree.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBSPTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBSPTree.o `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp

base_lst-SbBSPTree.obj: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBSPTree.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBSPTree.obj `if test -f 'SbBSPTree.cpp'; then $(CYGPATH_W) 'SbBSPTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBSPTree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo" "$(DEPDIR)/base_lst-SbBSPTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='base_lst-SbBSPTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBSPTree.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBSPTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBSPTree.obj `if test -f 'SbBSPTree.cpp'; then $(CYGPATH_W) 'SbBSPTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBSPTree.cpp'; fi`

base_lst-SbBSPTree.lo: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBSPTree.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBSPTree.lo `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo" "$(DEPDIR)/base_lst-SbBSPTree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='base_lst-SbBSPTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBSPTree.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBSPTree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBSPTree.lo `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp

base_lst-SbByteBuffer.o: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbByteBuffer.o -MD -MP -MF "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbByteBuffer.o `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" "$(DEPDIR)/base_lst-SbByteBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='base_lst-SbByteBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbByteBuffer.Po' tmpdepfile='$(DEPDIR)/base_lst-SbByteBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbByteBuffer.o `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp

base_lst-SbByteBuffer.obj: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbByteBuffer.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbByteBuffer.obj `if test -f 'SbByteBuffer.cpp'; then $(CYGPATH_W) 'SbByteBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/SbByteBuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" "$(DEPDIR)/base_lst-SbByteBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='base_lst-SbByteBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbByteBuffer.Po' tmpdepfile='$(DEPDIR)/base_lst-SbByteBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbByteBuffer.obj `if test -f 'SbByteBuffer.cpp'; then $(CYGPATH_W) 'SbByteBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/SbByteBuffer.cpp'; fi`

base_lst-SbByteBuffer.lo: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbByteBuffer.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbByteBuffer.lo `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo" "$(DEPDIR)/base_lst-SbByteBuffer.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='base_lst-SbByteBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbByteBuffer.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbByteBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbByteBuffer.lo `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp

base_lst-SbBox2s.o: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2s.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2s.o `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2s.Tpo" "$(DEPDIR)/base_lst-SbBox2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='base_lst-SbBox2s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2s.o `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp

base_lst-SbBox2s.obj: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2s.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2s.obj `if test -f 'SbBox2s.cpp'; then $(CYGPATH_W) 'SbBox2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2s.Tpo" "$(DEPDIR)/base_lst-SbBox2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='base_lst-SbBox2s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2s.obj `if test -f 'SbBox2s.cpp'; then $(CYGPATH_W) 'SbBox2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2s.cpp'; fi`

base_lst-SbBox2s.lo: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2s.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2s.lo `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2s.Tpo" "$(DEPDIR)/base_lst-SbBox2s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='base_lst-SbBox2s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2s.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox2s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2s.lo `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp

base_lst-SbBox2i32.o: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2i32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2i32.o `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo" "$(DEPDIR)/base_lst-SbBox2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='base_lst-SbBox2i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2i32.o `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp

base_lst-SbBox2i32.obj: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2i32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2i32.obj `if test -f 'SbBox2i32.cpp'; then $(CYGPATH_W) 'SbBox2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo" "$(DEPDIR)/base_lst-SbBox2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='base_lst-SbBox2i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2i32.obj `if test -f 'SbBox2i32.cpp'; then $(CYGPATH_W) 'SbBox2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2i32.cpp'; fi`

base_lst-SbBox2i32.lo: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2i32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2i32.lo `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo" "$(DEPDIR)/base_lst-SbBox2i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='base_lst-SbBox2i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2i32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox2i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2i32.lo `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp

base_lst-SbBox2f.o: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2f.o `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2f.Tpo" "$(DEPDIR)/base_lst-SbBox2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='base_lst-SbBox2f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2f.o `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp

base_lst-SbBox2f.obj: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2f.obj `if test -f 'SbBox2f.cpp'; then $(CYGPATH_W) 'SbBox2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2f.Tpo" "$(DEPDIR)/base_lst-SbBox2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='base_lst-SbBox2f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2f.obj `if test -f 'SbBox2f.cpp'; then $(CYGPATH_W) 'SbBox2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2f.cpp'; fi`

base_lst-SbBox2f.lo: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2f.lo `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2f.Tpo" "$(DEPDIR)/base_lst-SbBox2f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='base_lst-SbBox2f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox2f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2f.lo `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp

base_lst-SbBox2d.o: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2d.o `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2d.Tpo" "$(DEPDIR)/base_lst-SbBox2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='base_lst-SbBox2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2d.o `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp

base_lst-SbBox2d.obj: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2d.obj `if test -f 'SbBox2d.cpp'; then $(CYGPATH_W) 'SbBox2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2d.Tpo" "$(DEPDIR)/base_lst-SbBox2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='base_lst-SbBox2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2d.obj `if test -f 'SbBox2d.cpp'; then $(CYGPATH_W) 'SbBox2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2d.cpp'; fi`

base_lst-SbBox2d.lo: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox2d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox2d.lo `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox2d.Tpo" "$(DEPDIR)/base_lst-SbBox2d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='base_lst-SbBox2d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox2d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox2d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox2d.lo `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp

base_lst-SbBox3s.o: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3s.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3s.o `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3s.Tpo" "$(DEPDIR)/base_lst-SbBox3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='base_lst-SbBox3s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3s.o `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp

base_lst-SbBox3s.obj: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3s.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3s.obj `if test -f 'SbBox3s.cpp'; then $(CYGPATH_W) 'SbBox3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3s.Tpo" "$(DEPDIR)/base_lst-SbBox3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='base_lst-SbBox3s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3s.obj `if test -f 'SbBox3s.cpp'; then $(CYGPATH_W) 'SbBox3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3s.cpp'; fi`

base_lst-SbBox3s.lo: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3s.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3s.lo `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3s.Tpo" "$(DEPDIR)/base_lst-SbBox3s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='base_lst-SbBox3s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3s.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox3s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3s.lo `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp

base_lst-SbBox3i32.o: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3i32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3i32.o `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo" "$(DEPDIR)/base_lst-SbBox3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='base_lst-SbBox3i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3i32.o `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp

base_lst-SbBox3i32.obj: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3i32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3i32.obj `if test -f 'SbBox3i32.cpp'; then $(CYGPATH_W) 'SbBox3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo" "$(DEPDIR)/base_lst-SbBox3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='base_lst-SbBox3i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3i32.obj `if test -f 'SbBox3i32.cpp'; then $(CYGPATH_W) 'SbBox3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3i32.cpp'; fi`

base_lst-SbBox3i32.lo: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3i32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3i32.lo `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo" "$(DEPDIR)/base_lst-SbBox3i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='base_lst-SbBox3i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3i32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox3i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3i32.lo `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp

base_lst-SbBox3f.o: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3f.o `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3f.Tpo" "$(DEPDIR)/base_lst-SbBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='base_lst-SbBox3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3f.o `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp

base_lst-SbBox3f.obj: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3f.obj `if test -f 'SbBox3f.cpp'; then $(CYGPATH_W) 'SbBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3f.Tpo" "$(DEPDIR)/base_lst-SbBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='base_lst-SbBox3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3f.obj `if test -f 'SbBox3f.cpp'; then $(CYGPATH_W) 'SbBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3f.cpp'; fi`

base_lst-SbBox3f.lo: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3f.lo `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3f.Tpo" "$(DEPDIR)/base_lst-SbBox3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='base_lst-SbBox3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3f.lo `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp

base_lst-SbBox3d.o: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3d.o `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3d.Tpo" "$(DEPDIR)/base_lst-SbBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='base_lst-SbBox3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3d.o `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp

base_lst-SbBox3d.obj: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3d.obj `if test -f 'SbBox3d.cpp'; then $(CYGPATH_W) 'SbBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3d.Tpo" "$(DEPDIR)/base_lst-SbBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='base_lst-SbBox3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3d.obj `if test -f 'SbBox3d.cpp'; then $(CYGPATH_W) 'SbBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3d.cpp'; fi`

base_lst-SbBox3d.lo: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbBox3d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbBox3d.lo `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbBox3d.Tpo" "$(DEPDIR)/base_lst-SbBox3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='base_lst-SbBox3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbBox3d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbBox3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbBox3d.lo `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp

base_lst-SbClip.o: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbClip.o -MD -MP -MF "$(DEPDIR)/base_lst-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbClip.o `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbClip.Tpo" "$(DEPDIR)/base_lst-SbClip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='base_lst-SbClip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbClip.Po' tmpdepfile='$(DEPDIR)/base_lst-SbClip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbClip.o `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp

base_lst-SbClip.obj: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbClip.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbClip.obj `if test -f 'SbClip.cpp'; then $(CYGPATH_W) 'SbClip.cpp'; else $(CYGPATH_W) '$(srcdir)/SbClip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbClip.Tpo" "$(DEPDIR)/base_lst-SbClip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='base_lst-SbClip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbClip.Po' tmpdepfile='$(DEPDIR)/base_lst-SbClip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbClip.obj `if test -f 'SbClip.cpp'; then $(CYGPATH_W) 'SbClip.cpp'; else $(CYGPATH_W) '$(srcdir)/SbClip.cpp'; fi`

base_lst-SbClip.lo: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbClip.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbClip.lo `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbClip.Tpo" "$(DEPDIR)/base_lst-SbClip.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='base_lst-SbClip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbClip.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbClip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbClip.lo `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp

base_lst-SbColor.o: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor.o -MD -MP -MF "$(DEPDIR)/base_lst-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor.o `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor.Tpo" "$(DEPDIR)/base_lst-SbColor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='base_lst-SbColor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor.Po' tmpdepfile='$(DEPDIR)/base_lst-SbColor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor.o `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp

base_lst-SbColor.obj: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor.obj `if test -f 'SbColor.cpp'; then $(CYGPATH_W) 'SbColor.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor.Tpo" "$(DEPDIR)/base_lst-SbColor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='base_lst-SbColor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor.Po' tmpdepfile='$(DEPDIR)/base_lst-SbColor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor.obj `if test -f 'SbColor.cpp'; then $(CYGPATH_W) 'SbColor.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor.cpp'; fi`

base_lst-SbColor.lo: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor.lo `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor.Tpo" "$(DEPDIR)/base_lst-SbColor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='base_lst-SbColor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbColor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor.lo `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp

base_lst-SbColor4f.o: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor4f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor4f.o `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor4f.Tpo" "$(DEPDIR)/base_lst-SbColor4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='base_lst-SbColor4f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor4f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbColor4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor4f.o `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp

base_lst-SbColor4f.obj: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor4f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor4f.obj `if test -f 'SbColor4f.cpp'; then $(CYGPATH_W) 'SbColor4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor4f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor4f.Tpo" "$(DEPDIR)/base_lst-SbColor4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='base_lst-SbColor4f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor4f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbColor4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor4f.obj `if test -f 'SbColor4f.cpp'; then $(CYGPATH_W) 'SbColor4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor4f.cpp'; fi`

base_lst-SbColor4f.lo: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbColor4f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbColor4f.lo `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbColor4f.Tpo" "$(DEPDIR)/base_lst-SbColor4f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='base_lst-SbColor4f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbColor4f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbColor4f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbColor4f.lo `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp

base_lst-SbCylinder.o: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbCylinder.o -MD -MP -MF "$(DEPDIR)/base_lst-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbCylinder.o `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbCylinder.Tpo" "$(DEPDIR)/base_lst-SbCylinder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='base_lst-SbCylinder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbCylinder.Po' tmpdepfile='$(DEPDIR)/base_lst-SbCylinder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbCylinder.o `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp

base_lst-SbCylinder.obj: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbCylinder.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbCylinder.obj `if test -f 'SbCylinder.cpp'; then $(CYGPATH_W) 'SbCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/SbCylinder.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbCylinder.Tpo" "$(DEPDIR)/base_lst-SbCylinder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='base_lst-SbCylinder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbCylinder.Po' tmpdepfile='$(DEPDIR)/base_lst-SbCylinder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbCylinder.obj `if test -f 'SbCylinder.cpp'; then $(CYGPATH_W) 'SbCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/SbCylinder.cpp'; fi`

base_lst-SbCylinder.lo: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbCylinder.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbCylinder.lo `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbCylinder.Tpo" "$(DEPDIR)/base_lst-SbCylinder.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='base_lst-SbCylinder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbCylinder.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbCylinder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbCylinder.lo `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp

base_lst-SbDict.o: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDict.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDict.o `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDict.Tpo" "$(DEPDIR)/base_lst-SbDict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='base_lst-SbDict.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDict.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDict.o `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp

base_lst-SbDict.obj: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDict.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDict.obj `if test -f 'SbDict.cpp'; then $(CYGPATH_W) 'SbDict.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDict.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDict.Tpo" "$(DEPDIR)/base_lst-SbDict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='base_lst-SbDict.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDict.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDict.obj `if test -f 'SbDict.cpp'; then $(CYGPATH_W) 'SbDict.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDict.cpp'; fi`

base_lst-SbDict.lo: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDict.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDict.lo `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDict.Tpo" "$(DEPDIR)/base_lst-SbDict.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='base_lst-SbDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDict.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDict.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDict.lo `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp

base_lst-SbDPLine.o: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPLine.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPLine.o `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPLine.Tpo" "$(DEPDIR)/base_lst-SbDPLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='base_lst-SbDPLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPLine.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPLine.o `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp

base_lst-SbDPLine.obj: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPLine.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPLine.obj `if test -f 'SbDPLine.cpp'; then $(CYGPATH_W) 'SbDPLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPLine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPLine.Tpo" "$(DEPDIR)/base_lst-SbDPLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='base_lst-SbDPLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPLine.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPLine.obj `if test -f 'SbDPLine.cpp'; then $(CYGPATH_W) 'SbDPLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPLine.cpp'; fi`

base_lst-SbDPLine.lo: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPLine.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPLine.lo `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPLine.Tpo" "$(DEPDIR)/base_lst-SbDPLine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='base_lst-SbDPLine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPLine.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDPLine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPLine.lo `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp

base_lst-SbDPMatrix.o: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPMatrix.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPMatrix.o `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" "$(DEPDIR)/base_lst-SbDPMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='base_lst-SbDPMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPMatrix.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPMatrix.o `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp

base_lst-SbDPMatrix.obj: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPMatrix.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPMatrix.obj `if test -f 'SbDPMatrix.cpp'; then $(CYGPATH_W) 'SbDPMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPMatrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" "$(DEPDIR)/base_lst-SbDPMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='base_lst-SbDPMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPMatrix.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPMatrix.obj `if test -f 'SbDPMatrix.cpp'; then $(CYGPATH_W) 'SbDPMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPMatrix.cpp'; fi`

base_lst-SbDPMatrix.lo: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPMatrix.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPMatrix.lo `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo" "$(DEPDIR)/base_lst-SbDPMatrix.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='base_lst-SbDPMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPMatrix.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDPMatrix.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPMatrix.lo `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp

base_lst-SbDPPlane.o: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPPlane.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPPlane.o `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo" "$(DEPDIR)/base_lst-SbDPPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='base_lst-SbDPPlane.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPPlane.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPPlane.o `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp

base_lst-SbDPPlane.obj: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPPlane.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPPlane.obj `if test -f 'SbDPPlane.cpp'; then $(CYGPATH_W) 'SbDPPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPPlane.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo" "$(DEPDIR)/base_lst-SbDPPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='base_lst-SbDPPlane.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPPlane.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPPlane.obj `if test -f 'SbDPPlane.cpp'; then $(CYGPATH_W) 'SbDPPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPPlane.cpp'; fi`

base_lst-SbDPPlane.lo: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPPlane.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPPlane.lo `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo" "$(DEPDIR)/base_lst-SbDPPlane.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='base_lst-SbDPPlane.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPPlane.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDPPlane.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPPlane.lo `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp

base_lst-SbDPRotation.o: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPRotation.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPRotation.o `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo" "$(DEPDIR)/base_lst-SbDPRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='base_lst-SbDPRotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPRotation.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPRotation.o `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp

base_lst-SbDPRotation.obj: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPRotation.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPRotation.obj `if test -f 'SbDPRotation.cpp'; then $(CYGPATH_W) 'SbDPRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPRotation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo" "$(DEPDIR)/base_lst-SbDPRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='base_lst-SbDPRotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPRotation.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPRotation.obj `if test -f 'SbDPRotation.cpp'; then $(CYGPATH_W) 'SbDPRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPRotation.cpp'; fi`

base_lst-SbDPRotation.lo: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPRotation.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPRotation.lo `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo" "$(DEPDIR)/base_lst-SbDPRotation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='base_lst-SbDPRotation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPRotation.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDPRotation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPRotation.lo `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp

base_lst-SbHeap.o: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbHeap.o -MD -MP -MF "$(DEPDIR)/base_lst-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbHeap.o `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbHeap.Tpo" "$(DEPDIR)/base_lst-SbHeap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='base_lst-SbHeap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbHeap.Po' tmpdepfile='$(DEPDIR)/base_lst-SbHeap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbHeap.o `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp

base_lst-SbHeap.obj: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbHeap.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbHeap.obj `if test -f 'SbHeap.cpp'; then $(CYGPATH_W) 'SbHeap.cpp'; else $(CYGPATH_W) '$(srcdir)/SbHeap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbHeap.Tpo" "$(DEPDIR)/base_lst-SbHeap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='base_lst-SbHeap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbHeap.Po' tmpdepfile='$(DEPDIR)/base_lst-SbHeap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbHeap.obj `if test -f 'SbHeap.cpp'; then $(CYGPATH_W) 'SbHeap.cpp'; else $(CYGPATH_W) '$(srcdir)/SbHeap.cpp'; fi`

base_lst-SbHeap.lo: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbHeap.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbHeap.lo `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbHeap.Tpo" "$(DEPDIR)/base_lst-SbHeap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='base_lst-SbHeap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbHeap.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbHeap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbHeap.lo `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp

base_lst-SbImage.o: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbImage.o -MD -MP -MF "$(DEPDIR)/base_lst-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbImage.o `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbImage.Tpo" "$(DEPDIR)/base_lst-SbImage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='base_lst-SbImage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbImage.Po' tmpdepfile='$(DEPDIR)/base_lst-SbImage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbImage.o `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp

base_lst-SbImage.obj: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbImage.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbImage.obj `if test -f 'SbImage.cpp'; then $(CYGPATH_W) 'SbImage.cpp'; else $(CYGPATH_W) '$(srcdir)/SbImage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbImage.Tpo" "$(DEPDIR)/base_lst-SbImage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='base_lst-SbImage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbImage.Po' tmpdepfile='$(DEPDIR)/base_lst-SbImage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbImage.obj `if test -f 'SbImage.cpp'; then $(CYGPATH_W) 'SbImage.cpp'; else $(CYGPATH_W) '$(srcdir)/SbImage.cpp'; fi`

base_lst-SbImage.lo: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbImage.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbImage.lo `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbImage.Tpo" "$(DEPDIR)/base_lst-SbImage.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='base_lst-SbImage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbImage.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbImage.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbImage.lo `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp

base_lst-SbLine.o: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbLine.o -MD -MP -MF "$(DEPDIR)/base_lst-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbLine.o `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbLine.Tpo" "$(DEPDIR)/base_lst-SbLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='base_lst-SbLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbLine.Po' tmpdepfile='$(DEPDIR)/base_lst-SbLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbLine.o `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp

base_lst-SbLine.obj: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbLine.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbLine.obj `if test -f 'SbLine.cpp'; then $(CYGPATH_W) 'SbLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbLine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbLine.Tpo" "$(DEPDIR)/base_lst-SbLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='base_lst-SbLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbLine.Po' tmpdepfile='$(DEPDIR)/base_lst-SbLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbLine.obj `if test -f 'SbLine.cpp'; then $(CYGPATH_W) 'SbLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbLine.cpp'; fi`

base_lst-SbLine.lo: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbLine.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbLine.lo `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbLine.Tpo" "$(DEPDIR)/base_lst-SbLine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='base_lst-SbLine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbLine.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbLine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbLine.lo `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp

base_lst-SbMatrix.o: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbMatrix.o -MD -MP -MF "$(DEPDIR)/base_lst-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbMatrix.o `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbMatrix.Tpo" "$(DEPDIR)/base_lst-SbMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='base_lst-SbMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbMatrix.Po' tmpdepfile='$(DEPDIR)/base_lst-SbMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbMatrix.o `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp

base_lst-SbMatrix.obj: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbMatrix.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbMatrix.obj `if test -f 'SbMatrix.cpp'; then $(CYGPATH_W) 'SbMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbMatrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbMatrix.Tpo" "$(DEPDIR)/base_lst-SbMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='base_lst-SbMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbMatrix.Po' tmpdepfile='$(DEPDIR)/base_lst-SbMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbMatrix.obj `if test -f 'SbMatrix.cpp'; then $(CYGPATH_W) 'SbMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbMatrix.cpp'; fi`

base_lst-SbMatrix.lo: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbMatrix.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbMatrix.lo `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbMatrix.Tpo" "$(DEPDIR)/base_lst-SbMatrix.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='base_lst-SbMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbMatrix.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbMatrix.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbMatrix.lo `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp

base_lst-SbName.o: SbName.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbName.o -MD -MP -MF "$(DEPDIR)/base_lst-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbName.o `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbName.Tpo" "$(DEPDIR)/base_lst-SbName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='base_lst-SbName.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbName.Po' tmpdepfile='$(DEPDIR)/base_lst-SbName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbName.o `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp

base_lst-SbName.obj: SbName.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbName.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbName.obj `if test -f 'SbName.cpp'; then $(CYGPATH_W) 'SbName.cpp'; else $(CYGPATH_W) '$(srcdir)/SbName.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbName.Tpo" "$(DEPDIR)/base_lst-SbName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='base_lst-SbName.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbName.Po' tmpdepfile='$(DEPDIR)/base_lst-SbName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbName.obj `if test -f 'SbName.cpp'; then $(CYGPATH_W) 'SbName.cpp'; else $(CYGPATH_W) '$(srcdir)/SbName.cpp'; fi`

base_lst-SbName.lo: SbName.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbName.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbName.lo `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbName.Tpo" "$(DEPDIR)/base_lst-SbName.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='base_lst-SbName.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbName.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbName.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbName.lo `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp

base_lst-SbOctTree.o: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbOctTree.o -MD -MP -MF "$(DEPDIR)/base_lst-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbOctTree.o `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbOctTree.Tpo" "$(DEPDIR)/base_lst-SbOctTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='base_lst-SbOctTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbOctTree.Po' tmpdepfile='$(DEPDIR)/base_lst-SbOctTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbOctTree.o `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp

base_lst-SbOctTree.obj: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbOctTree.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbOctTree.obj `if test -f 'SbOctTree.cpp'; then $(CYGPATH_W) 'SbOctTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbOctTree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbOctTree.Tpo" "$(DEPDIR)/base_lst-SbOctTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='base_lst-SbOctTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbOctTree.Po' tmpdepfile='$(DEPDIR)/base_lst-SbOctTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbOctTree.obj `if test -f 'SbOctTree.cpp'; then $(CYGPATH_W) 'SbOctTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbOctTree.cpp'; fi`

base_lst-SbOctTree.lo: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbOctTree.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbOctTree.lo `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbOctTree.Tpo" "$(DEPDIR)/base_lst-SbOctTree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='base_lst-SbOctTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbOctTree.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbOctTree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbOctTree.lo `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp

base_lst-SbPlane.o: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbPlane.o -MD -MP -MF "$(DEPDIR)/base_lst-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbPlane.o `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbPlane.Tpo" "$(DEPDIR)/base_lst-SbPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='base_lst-SbPlane.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbPlane.Po' tmpdepfile='$(DEPDIR)/base_lst-SbPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbPlane.o `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp

base_lst-SbPlane.obj: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbPlane.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbPlane.obj `if test -f 'SbPlane.cpp'; then $(CYGPATH_W) 'SbPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbPlane.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbPlane.Tpo" "$(DEPDIR)/base_lst-SbPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='base_lst-SbPlane.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbPlane.Po' tmpdepfile='$(DEPDIR)/base_lst-SbPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbPlane.obj `if test -f 'SbPlane.cpp'; then $(CYGPATH_W) 'SbPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbPlane.cpp'; fi`

base_lst-SbPlane.lo: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbPlane.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbPlane.lo `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbPlane.Tpo" "$(DEPDIR)/base_lst-SbPlane.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='base_lst-SbPlane.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbPlane.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbPlane.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbPlane.lo `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp

base_lst-SbRotation.o: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbRotation.o -MD -MP -MF "$(DEPDIR)/base_lst-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbRotation.o `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbRotation.Tpo" "$(DEPDIR)/base_lst-SbRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='base_lst-SbRotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbRotation.Po' tmpdepfile='$(DEPDIR)/base_lst-SbRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbRotation.o `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp

base_lst-SbRotation.obj: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbRotation.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbRotation.obj `if test -f 'SbRotation.cpp'; then $(CYGPATH_W) 'SbRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbRotation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbRotation.Tpo" "$(DEPDIR)/base_lst-SbRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='base_lst-SbRotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbRotation.Po' tmpdepfile='$(DEPDIR)/base_lst-SbRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbRotation.obj `if test -f 'SbRotation.cpp'; then $(CYGPATH_W) 'SbRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbRotation.cpp'; fi`

base_lst-SbRotation.lo: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbRotation.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbRotation.lo `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbRotation.Tpo" "$(DEPDIR)/base_lst-SbRotation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='base_lst-SbRotation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbRotation.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbRotation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbRotation.lo `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp

base_lst-SbSphere.o: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbSphere.o -MD -MP -MF "$(DEPDIR)/base_lst-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbSphere.o `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbSphere.Tpo" "$(DEPDIR)/base_lst-SbSphere.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='base_lst-SbSphere.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbSphere.Po' tmpdepfile='$(DEPDIR)/base_lst-SbSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbSphere.o `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp

base_lst-SbSphere.obj: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbSphere.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbSphere.obj `if test -f 'SbSphere.cpp'; then $(CYGPATH_W) 'SbSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/SbSphere.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbSphere.Tpo" "$(DEPDIR)/base_lst-SbSphere.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='base_lst-SbSphere.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbSphere.Po' tmpdepfile='$(DEPDIR)/base_lst-SbSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbSphere.obj `if test -f 'SbSphere.cpp'; then $(CYGPATH_W) 'SbSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/SbSphere.cpp'; fi`

base_lst-SbSphere.lo: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbSphere.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbSphere.lo `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbSphere.Tpo" "$(DEPDIR)/base_lst-SbSphere.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='base_lst-SbSphere.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbSphere.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbSphere.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbSphere.lo `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp

base_lst-SbString.o: SbString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbString.o -MD -MP -MF "$(DEPDIR)/base_lst-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbString.o `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbString.Tpo" "$(DEPDIR)/base_lst-SbString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='base_lst-SbString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbString.Po' tmpdepfile='$(DEPDIR)/base_lst-SbString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbString.o `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp

base_lst-SbString.obj: SbString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbString.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbString.obj `if test -f 'SbString.cpp'; then $(CYGPATH_W) 'SbString.cpp'; else $(CYGPATH_W) '$(srcdir)/SbString.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbString.Tpo" "$(DEPDIR)/base_lst-SbString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='base_lst-SbString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbString.Po' tmpdepfile='$(DEPDIR)/base_lst-SbString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbString.obj `if test -f 'SbString.cpp'; then $(CYGPATH_W) 'SbString.cpp'; else $(CYGPATH_W) '$(srcdir)/SbString.cpp'; fi`

base_lst-SbString.lo: SbString.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbString.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbString.lo `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbString.Tpo" "$(DEPDIR)/base_lst-SbString.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='base_lst-SbString.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbString.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbString.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbString.lo `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp

base_lst-SbTesselator.o: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTesselator.o -MD -MP -MF "$(DEPDIR)/base_lst-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTesselator.o `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTesselator.Tpo" "$(DEPDIR)/base_lst-SbTesselator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='base_lst-SbTesselator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTesselator.Po' tmpdepfile='$(DEPDIR)/base_lst-SbTesselator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTesselator.o `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp

base_lst-SbTesselator.obj: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTesselator.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTesselator.obj `if test -f 'SbTesselator.cpp'; then $(CYGPATH_W) 'SbTesselator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTesselator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTesselator.Tpo" "$(DEPDIR)/base_lst-SbTesselator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='base_lst-SbTesselator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTesselator.Po' tmpdepfile='$(DEPDIR)/base_lst-SbTesselator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTesselator.obj `if test -f 'SbTesselator.cpp'; then $(CYGPATH_W) 'SbTesselator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTesselator.cpp'; fi`

base_lst-SbTesselator.lo: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTesselator.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTesselator.lo `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTesselator.Tpo" "$(DEPDIR)/base_lst-SbTesselator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='base_lst-SbTesselator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTesselator.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbTesselator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTesselator.lo `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp

base_lst-SbGLUTessellator.o: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbGLUTessellator.o -MD -MP -MF "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbGLUTessellator.o `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" "$(DEPDIR)/base_lst-SbGLUTessellator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='base_lst-SbGLUTessellator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbGLUTessellator.Po' tmpdepfile='$(DEPDIR)/base_lst-SbGLUTessellator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbGLUTessellator.o `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp

base_lst-SbGLUTessellator.obj: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbGLUTessellator.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbGLUTessellator.obj `if test -f 'SbGLUTessellator.cpp'; then $(CYGPATH_W) 'SbGLUTessellator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbGLUTessellator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" "$(DEPDIR)/base_lst-SbGLUTessellator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='base_lst-SbGLUTessellator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbGLUTessellator.Po' tmpdepfile='$(DEPDIR)/base_lst-SbGLUTessellator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbGLUTessellator.obj `if test -f 'SbGLUTessellator.cpp'; then $(CYGPATH_W) 'SbGLUTessellator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbGLUTessellator.cpp'; fi`

base_lst-SbGLUTessellator.lo: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbGLUTessellator.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbGLUTessellator.lo `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo" "$(DEPDIR)/base_lst-SbGLUTessellator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='base_lst-SbGLUTessellator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbGLUTessellator.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbGLUTessellator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbGLUTessellator.lo `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp

base_lst-SbTime.o: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTime.o -MD -MP -MF "$(DEPDIR)/base_lst-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTime.o `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTime.Tpo" "$(DEPDIR)/base_lst-SbTime.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='base_lst-SbTime.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTime.Po' tmpdepfile='$(DEPDIR)/base_lst-SbTime.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTime.o `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp

base_lst-SbTime.obj: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTime.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTime.obj `if test -f 'SbTime.cpp'; then $(CYGPATH_W) 'SbTime.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTime.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTime.Tpo" "$(DEPDIR)/base_lst-SbTime.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='base_lst-SbTime.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTime.Po' tmpdepfile='$(DEPDIR)/base_lst-SbTime.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTime.obj `if test -f 'SbTime.cpp'; then $(CYGPATH_W) 'SbTime.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTime.cpp'; fi`

base_lst-SbTime.lo: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbTime.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbTime.lo `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbTime.Tpo" "$(DEPDIR)/base_lst-SbTime.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='base_lst-SbTime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbTime.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbTime.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbTime.lo `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp

base_lst-SbVec2b.o: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2b.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2b.o `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2b.Tpo" "$(DEPDIR)/base_lst-SbVec2b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='base_lst-SbVec2b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2b.o `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp

base_lst-SbVec2b.obj: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2b.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2b.obj `if test -f 'SbVec2b.cpp'; then $(CYGPATH_W) 'SbVec2b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2b.Tpo" "$(DEPDIR)/base_lst-SbVec2b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='base_lst-SbVec2b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2b.obj `if test -f 'SbVec2b.cpp'; then $(CYGPATH_W) 'SbVec2b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2b.cpp'; fi`

base_lst-SbVec2b.lo: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2b.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2b.lo `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2b.Tpo" "$(DEPDIR)/base_lst-SbVec2b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='base_lst-SbVec2b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2b.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2b.lo `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp

base_lst-SbVec2ub.o: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ub.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ub.o `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo" "$(DEPDIR)/base_lst-SbVec2ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='base_lst-SbVec2ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ub.o `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp

base_lst-SbVec2ub.obj: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ub.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ub.obj `if test -f 'SbVec2ub.cpp'; then $(CYGPATH_W) 'SbVec2ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo" "$(DEPDIR)/base_lst-SbVec2ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='base_lst-SbVec2ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ub.obj `if test -f 'SbVec2ub.cpp'; then $(CYGPATH_W) 'SbVec2ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ub.cpp'; fi`

base_lst-SbVec2ub.lo: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ub.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ub.lo `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo" "$(DEPDIR)/base_lst-SbVec2ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='base_lst-SbVec2ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ub.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ub.lo `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp

base_lst-SbVec2s.o: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2s.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2s.o `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2s.Tpo" "$(DEPDIR)/base_lst-SbVec2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='base_lst-SbVec2s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2s.o `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp

base_lst-SbVec2s.obj: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2s.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2s.obj `if test -f 'SbVec2s.cpp'; then $(CYGPATH_W) 'SbVec2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2s.Tpo" "$(DEPDIR)/base_lst-SbVec2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='base_lst-SbVec2s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2s.obj `if test -f 'SbVec2s.cpp'; then $(CYGPATH_W) 'SbVec2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2s.cpp'; fi`

base_lst-SbVec2s.lo: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2s.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2s.lo `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2s.Tpo" "$(DEPDIR)/base_lst-SbVec2s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='base_lst-SbVec2s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2s.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2s.lo `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp

base_lst-SbVec2us.o: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2us.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2us.o `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2us.Tpo" "$(DEPDIR)/base_lst-SbVec2us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='base_lst-SbVec2us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2us.o `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp

base_lst-SbVec2us.obj: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2us.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2us.obj `if test -f 'SbVec2us.cpp'; then $(CYGPATH_W) 'SbVec2us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2us.Tpo" "$(DEPDIR)/base_lst-SbVec2us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='base_lst-SbVec2us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2us.obj `if test -f 'SbVec2us.cpp'; then $(CYGPATH_W) 'SbVec2us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2us.cpp'; fi`

base_lst-SbVec2us.lo: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2us.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2us.lo `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2us.Tpo" "$(DEPDIR)/base_lst-SbVec2us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='base_lst-SbVec2us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2us.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2us.lo `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp

base_lst-SbVec2i32.o: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2i32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2i32.o `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo" "$(DEPDIR)/base_lst-SbVec2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='base_lst-SbVec2i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2i32.o `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp

base_lst-SbVec2i32.obj: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2i32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2i32.obj `if test -f 'SbVec2i32.cpp'; then $(CYGPATH_W) 'SbVec2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo" "$(DEPDIR)/base_lst-SbVec2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='base_lst-SbVec2i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2i32.obj `if test -f 'SbVec2i32.cpp'; then $(CYGPATH_W) 'SbVec2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2i32.cpp'; fi`

base_lst-SbVec2i32.lo: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2i32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2i32.lo `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo" "$(DEPDIR)/base_lst-SbVec2i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='base_lst-SbVec2i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2i32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2i32.lo `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp

base_lst-SbVec2ui32.o: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ui32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ui32.o `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" "$(DEPDIR)/base_lst-SbVec2ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='base_lst-SbVec2ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ui32.o `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp

base_lst-SbVec2ui32.obj: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ui32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ui32.obj `if test -f 'SbVec2ui32.cpp'; then $(CYGPATH_W) 'SbVec2ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" "$(DEPDIR)/base_lst-SbVec2ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='base_lst-SbVec2ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ui32.obj `if test -f 'SbVec2ui32.cpp'; then $(CYGPATH_W) 'SbVec2ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ui32.cpp'; fi`

base_lst-SbVec2ui32.lo: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2ui32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2ui32.lo `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo" "$(DEPDIR)/base_lst-SbVec2ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='base_lst-SbVec2ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2ui32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2ui32.lo `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp

base_lst-SbVec2f.o: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2f.o `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2f.Tpo" "$(DEPDIR)/base_lst-SbVec2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='base_lst-SbVec2f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2f.o `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp

base_lst-SbVec2f.obj: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2f.obj `if test -f 'SbVec2f.cpp'; then $(CYGPATH_W) 'SbVec2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2f.Tpo" "$(DEPDIR)/base_lst-SbVec2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='base_lst-SbVec2f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2f.obj `if test -f 'SbVec2f.cpp'; then $(CYGPATH_W) 'SbVec2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2f.cpp'; fi`

base_lst-SbVec2f.lo: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2f.lo `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2f.Tpo" "$(DEPDIR)/base_lst-SbVec2f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='base_lst-SbVec2f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2f.lo `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp

base_lst-SbVec2d.o: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2d.o `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2d.Tpo" "$(DEPDIR)/base_lst-SbVec2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='base_lst-SbVec2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2d.o `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp

base_lst-SbVec2d.obj: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2d.obj `if test -f 'SbVec2d.cpp'; then $(CYGPATH_W) 'SbVec2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2d.Tpo" "$(DEPDIR)/base_lst-SbVec2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='base_lst-SbVec2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2d.obj `if test -f 'SbVec2d.cpp'; then $(CYGPATH_W) 'SbVec2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2d.cpp'; fi`

base_lst-SbVec2d.lo: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec2d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec2d.lo `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec2d.Tpo" "$(DEPDIR)/base_lst-SbVec2d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='base_lst-SbVec2d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec2d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec2d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec2d.lo `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp

base_lst-SbVec3b.o: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3b.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3b.o `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3b.Tpo" "$(DEPDIR)/base_lst-SbVec3b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='base_lst-SbVec3b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3b.o `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp

base_lst-SbVec3b.obj: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3b.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3b.obj `if test -f 'SbVec3b.cpp'; then $(CYGPATH_W) 'SbVec3b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3b.Tpo" "$(DEPDIR)/base_lst-SbVec3b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='base_lst-SbVec3b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3b.obj `if test -f 'SbVec3b.cpp'; then $(CYGPATH_W) 'SbVec3b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3b.cpp'; fi`

base_lst-SbVec3b.lo: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3b.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3b.lo `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3b.Tpo" "$(DEPDIR)/base_lst-SbVec3b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='base_lst-SbVec3b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3b.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3b.lo `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp

base_lst-SbVec3ub.o: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ub.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ub.o `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo" "$(DEPDIR)/base_lst-SbVec3ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='base_lst-SbVec3ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ub.o `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp

base_lst-SbVec3ub.obj: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ub.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ub.obj `if test -f 'SbVec3ub.cpp'; then $(CYGPATH_W) 'SbVec3ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo" "$(DEPDIR)/base_lst-SbVec3ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='base_lst-SbVec3ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ub.obj `if test -f 'SbVec3ub.cpp'; then $(CYGPATH_W) 'SbVec3ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ub.cpp'; fi`

base_lst-SbVec3ub.lo: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ub.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ub.lo `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo" "$(DEPDIR)/base_lst-SbVec3ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='base_lst-SbVec3ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ub.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ub.lo `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp

base_lst-SbVec3s.o: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3s.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3s.o `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3s.Tpo" "$(DEPDIR)/base_lst-SbVec3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='base_lst-SbVec3s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3s.o `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp

base_lst-SbVec3s.obj: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3s.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3s.obj `if test -f 'SbVec3s.cpp'; then $(CYGPATH_W) 'SbVec3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3s.Tpo" "$(DEPDIR)/base_lst-SbVec3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='base_lst-SbVec3s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3s.obj `if test -f 'SbVec3s.cpp'; then $(CYGPATH_W) 'SbVec3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3s.cpp'; fi`

base_lst-SbVec3s.lo: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3s.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3s.lo `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3s.Tpo" "$(DEPDIR)/base_lst-SbVec3s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='base_lst-SbVec3s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3s.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3s.lo `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp

base_lst-SbVec3us.o: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3us.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3us.o `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3us.Tpo" "$(DEPDIR)/base_lst-SbVec3us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='base_lst-SbVec3us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3us.o `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp

base_lst-SbVec3us.obj: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3us.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3us.obj `if test -f 'SbVec3us.cpp'; then $(CYGPATH_W) 'SbVec3us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3us.Tpo" "$(DEPDIR)/base_lst-SbVec3us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='base_lst-SbVec3us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3us.obj `if test -f 'SbVec3us.cpp'; then $(CYGPATH_W) 'SbVec3us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3us.cpp'; fi`

base_lst-SbVec3us.lo: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3us.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3us.lo `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3us.Tpo" "$(DEPDIR)/base_lst-SbVec3us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='base_lst-SbVec3us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3us.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3us.lo `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp

base_lst-SbVec3i32.o: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3i32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3i32.o `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo" "$(DEPDIR)/base_lst-SbVec3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='base_lst-SbVec3i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3i32.o `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp

base_lst-SbVec3i32.obj: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3i32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3i32.obj `if test -f 'SbVec3i32.cpp'; then $(CYGPATH_W) 'SbVec3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo" "$(DEPDIR)/base_lst-SbVec3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='base_lst-SbVec3i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3i32.obj `if test -f 'SbVec3i32.cpp'; then $(CYGPATH_W) 'SbVec3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3i32.cpp'; fi`

base_lst-SbVec3i32.lo: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3i32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3i32.lo `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo" "$(DEPDIR)/base_lst-SbVec3i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='base_lst-SbVec3i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3i32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3i32.lo `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp

base_lst-SbVec3ui32.o: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ui32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ui32.o `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" "$(DEPDIR)/base_lst-SbVec3ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='base_lst-SbVec3ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ui32.o `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp

base_lst-SbVec3ui32.obj: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ui32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ui32.obj `if test -f 'SbVec3ui32.cpp'; then $(CYGPATH_W) 'SbVec3ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" "$(DEPDIR)/base_lst-SbVec3ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='base_lst-SbVec3ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ui32.obj `if test -f 'SbVec3ui32.cpp'; then $(CYGPATH_W) 'SbVec3ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ui32.cpp'; fi`

base_lst-SbVec3ui32.lo: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3ui32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3ui32.lo `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo" "$(DEPDIR)/base_lst-SbVec3ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='base_lst-SbVec3ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3ui32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3ui32.lo `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp

base_lst-SbVec3f.o: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3f.o `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3f.Tpo" "$(DEPDIR)/base_lst-SbVec3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='base_lst-SbVec3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3f.o `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp

base_lst-SbVec3f.obj: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3f.obj `if test -f 'SbVec3f.cpp'; then $(CYGPATH_W) 'SbVec3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3f.Tpo" "$(DEPDIR)/base_lst-SbVec3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='base_lst-SbVec3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3f.obj `if test -f 'SbVec3f.cpp'; then $(CYGPATH_W) 'SbVec3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3f.cpp'; fi`

base_lst-SbVec3f.lo: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3f.lo `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3f.Tpo" "$(DEPDIR)/base_lst-SbVec3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='base_lst-SbVec3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3f.lo `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp

base_lst-SbVec3d.o: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3d.o `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3d.Tpo" "$(DEPDIR)/base_lst-SbVec3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='base_lst-SbVec3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3d.o `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp

base_lst-SbVec3d.obj: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3d.obj `if test -f 'SbVec3d.cpp'; then $(CYGPATH_W) 'SbVec3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3d.Tpo" "$(DEPDIR)/base_lst-SbVec3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='base_lst-SbVec3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3d.obj `if test -f 'SbVec3d.cpp'; then $(CYGPATH_W) 'SbVec3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3d.cpp'; fi`

base_lst-SbVec3d.lo: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec3d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec3d.lo `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec3d.Tpo" "$(DEPDIR)/base_lst-SbVec3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='base_lst-SbVec3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec3d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec3d.lo `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp

base_lst-SbVec4b.o: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4b.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4b.o `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4b.Tpo" "$(DEPDIR)/base_lst-SbVec4b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='base_lst-SbVec4b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4b.o `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp

base_lst-SbVec4b.obj: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4b.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4b.obj `if test -f 'SbVec4b.cpp'; then $(CYGPATH_W) 'SbVec4b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4b.Tpo" "$(DEPDIR)/base_lst-SbVec4b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='base_lst-SbVec4b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4b.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4b.obj `if test -f 'SbVec4b.cpp'; then $(CYGPATH_W) 'SbVec4b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4b.cpp'; fi`

base_lst-SbVec4b.lo: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4b.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4b.lo `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4b.Tpo" "$(DEPDIR)/base_lst-SbVec4b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='base_lst-SbVec4b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4b.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4b.lo `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp

base_lst-SbVec4ub.o: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ub.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ub.o `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo" "$(DEPDIR)/base_lst-SbVec4ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='base_lst-SbVec4ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ub.o `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp

base_lst-SbVec4ub.obj: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ub.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ub.obj `if test -f 'SbVec4ub.cpp'; then $(CYGPATH_W) 'SbVec4ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo" "$(DEPDIR)/base_lst-SbVec4ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='base_lst-SbVec4ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ub.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ub.obj `if test -f 'SbVec4ub.cpp'; then $(CYGPATH_W) 'SbVec4ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ub.cpp'; fi`

base_lst-SbVec4ub.lo: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ub.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ub.lo `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo" "$(DEPDIR)/base_lst-SbVec4ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='base_lst-SbVec4ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ub.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ub.lo `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp

base_lst-SbVec4s.o: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4s.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4s.o `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4s.Tpo" "$(DEPDIR)/base_lst-SbVec4s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='base_lst-SbVec4s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4s.o `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp

base_lst-SbVec4s.obj: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4s.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4s.obj `if test -f 'SbVec4s.cpp'; then $(CYGPATH_W) 'SbVec4s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4s.Tpo" "$(DEPDIR)/base_lst-SbVec4s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='base_lst-SbVec4s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4s.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4s.obj `if test -f 'SbVec4s.cpp'; then $(CYGPATH_W) 'SbVec4s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4s.cpp'; fi`

base_lst-SbVec4s.lo: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4s.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4s.lo `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4s.Tpo" "$(DEPDIR)/base_lst-SbVec4s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='base_lst-SbVec4s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4s.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4s.lo `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp

base_lst-SbVec4us.o: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4us.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4us.o `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4us.Tpo" "$(DEPDIR)/base_lst-SbVec4us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='base_lst-SbVec4us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4us.o `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp

base_lst-SbVec4us.obj: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4us.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4us.obj `if test -f 'SbVec4us.cpp'; then $(CYGPATH_W) 'SbVec4us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4us.Tpo" "$(DEPDIR)/base_lst-SbVec4us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='base_lst-SbVec4us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4us.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4us.obj `if test -f 'SbVec4us.cpp'; then $(CYGPATH_W) 'SbVec4us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4us.cpp'; fi`

base_lst-SbVec4us.lo: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4us.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4us.lo `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4us.Tpo" "$(DEPDIR)/base_lst-SbVec4us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='base_lst-SbVec4us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4us.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4us.lo `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp

base_lst-SbVec4i32.o: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4i32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4i32.o `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo" "$(DEPDIR)/base_lst-SbVec4i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='base_lst-SbVec4i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4i32.o `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp

base_lst-SbVec4i32.obj: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4i32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4i32.obj `if test -f 'SbVec4i32.cpp'; then $(CYGPATH_W) 'SbVec4i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo" "$(DEPDIR)/base_lst-SbVec4i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='base_lst-SbVec4i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4i32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4i32.obj `if test -f 'SbVec4i32.cpp'; then $(CYGPATH_W) 'SbVec4i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4i32.cpp'; fi`

base_lst-SbVec4i32.lo: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4i32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4i32.lo `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo" "$(DEPDIR)/base_lst-SbVec4i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='base_lst-SbVec4i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4i32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4i32.lo `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp

base_lst-SbVec4ui32.o: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ui32.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ui32.o `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" "$(DEPDIR)/base_lst-SbVec4ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='base_lst-SbVec4ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ui32.o `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp

base_lst-SbVec4ui32.obj: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ui32.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ui32.obj `if test -f 'SbVec4ui32.cpp'; then $(CYGPATH_W) 'SbVec4ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" "$(DEPDIR)/base_lst-SbVec4ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='base_lst-SbVec4ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ui32.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ui32.obj `if test -f 'SbVec4ui32.cpp'; then $(CYGPATH_W) 'SbVec4ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ui32.cpp'; fi`

base_lst-SbVec4ui32.lo: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4ui32.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4ui32.lo `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo" "$(DEPDIR)/base_lst-SbVec4ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='base_lst-SbVec4ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4ui32.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4ui32.lo `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp

base_lst-SbVec4f.o: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4f.o `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4f.Tpo" "$(DEPDIR)/base_lst-SbVec4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='base_lst-SbVec4f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4f.o `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp

base_lst-SbVec4f.obj: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4f.obj `if test -f 'SbVec4f.cpp'; then $(CYGPATH_W) 'SbVec4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4f.Tpo" "$(DEPDIR)/base_lst-SbVec4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='base_lst-SbVec4f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4f.obj `if test -f 'SbVec4f.cpp'; then $(CYGPATH_W) 'SbVec4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4f.cpp'; fi`

base_lst-SbVec4f.lo: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4f.lo `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4f.Tpo" "$(DEPDIR)/base_lst-SbVec4f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='base_lst-SbVec4f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4f.lo `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp

base_lst-SbVec4d.o: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4d.o `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4d.Tpo" "$(DEPDIR)/base_lst-SbVec4d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='base_lst-SbVec4d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4d.o `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp

base_lst-SbVec4d.obj: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4d.obj `if test -f 'SbVec4d.cpp'; then $(CYGPATH_W) 'SbVec4d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4d.Tpo" "$(DEPDIR)/base_lst-SbVec4d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='base_lst-SbVec4d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbVec4d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4d.obj `if test -f 'SbVec4d.cpp'; then $(CYGPATH_W) 'SbVec4d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4d.cpp'; fi`

base_lst-SbVec4d.lo: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbVec4d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbVec4d.lo `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbVec4d.Tpo" "$(DEPDIR)/base_lst-SbVec4d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='base_lst-SbVec4d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbVec4d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbVec4d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbVec4d.lo `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp

base_lst-SbViewVolume.o: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewVolume.o -MD -MP -MF "$(DEPDIR)/base_lst-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewVolume.o `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo" "$(DEPDIR)/base_lst-SbViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='base_lst-SbViewVolume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewVolume.Po' tmpdepfile='$(DEPDIR)/base_lst-SbViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewVolume.o `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp

base_lst-SbViewVolume.obj: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewVolume.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewVolume.obj `if test -f 'SbViewVolume.cpp'; then $(CYGPATH_W) 'SbViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewVolume.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo" "$(DEPDIR)/base_lst-SbViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='base_lst-SbViewVolume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewVolume.Po' tmpdepfile='$(DEPDIR)/base_lst-SbViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewVolume.obj `if test -f 'SbViewVolume.cpp'; then $(CYGPATH_W) 'SbViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewVolume.cpp'; fi`

base_lst-SbViewVolume.lo: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewVolume.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewVolume.lo `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo" "$(DEPDIR)/base_lst-SbViewVolume.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='base_lst-SbViewVolume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewVolume.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbViewVolume.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewVolume.lo `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp

base_lst-SbDPViewVolume.o: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPViewVolume.o -MD -MP -MF "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPViewVolume.o `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" "$(DEPDIR)/base_lst-SbDPViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='base_lst-SbDPViewVolume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPViewVolume.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPViewVolume.o `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp

base_lst-SbDPViewVolume.obj: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPViewVolume.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPViewVolume.obj `if test -f 'SbDPViewVolume.cpp'; then $(CYGPATH_W) 'SbDPViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPViewVolume.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" "$(DEPDIR)/base_lst-SbDPViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='base_lst-SbDPViewVolume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPViewVolume.Po' tmpdepfile='$(DEPDIR)/base_lst-SbDPViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPViewVolume.obj `if test -f 'SbDPViewVolume.cpp'; then $(CYGPATH_W) 'SbDPViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPViewVolume.cpp'; fi`

base_lst-SbDPViewVolume.lo: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbDPViewVolume.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbDPViewVolume.lo `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo" "$(DEPDIR)/base_lst-SbDPViewVolume.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='base_lst-SbDPViewVolume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbDPViewVolume.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbDPViewVolume.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbDPViewVolume.lo `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp

base_lst-SbViewportRegion.o: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewportRegion.o -MD -MP -MF "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewportRegion.o `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" "$(DEPDIR)/base_lst-SbViewportRegion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='base_lst-SbViewportRegion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewportRegion.Po' tmpdepfile='$(DEPDIR)/base_lst-SbViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewportRegion.o `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp

base_lst-SbViewportRegion.obj: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewportRegion.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewportRegion.obj `if test -f 'SbViewportRegion.cpp'; then $(CYGPATH_W) 'SbViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewportRegion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" "$(DEPDIR)/base_lst-SbViewportRegion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='base_lst-SbViewportRegion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewportRegion.Po' tmpdepfile='$(DEPDIR)/base_lst-SbViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewportRegion.obj `if test -f 'SbViewportRegion.cpp'; then $(CYGPATH_W) 'SbViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewportRegion.cpp'; fi`

base_lst-SbViewportRegion.lo: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbViewportRegion.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbViewportRegion.lo `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo" "$(DEPDIR)/base_lst-SbViewportRegion.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='base_lst-SbViewportRegion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbViewportRegion.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbViewportRegion.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbViewportRegion.lo `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp

base_lst-SbXfBox3f.o: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3f.o -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3f.o `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" "$(DEPDIR)/base_lst-SbXfBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='base_lst-SbXfBox3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3f.o `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp

base_lst-SbXfBox3f.obj: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3f.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3f.obj `if test -f 'SbXfBox3f.cpp'; then $(CYGPATH_W) 'SbXfBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" "$(DEPDIR)/base_lst-SbXfBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='base_lst-SbXfBox3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3f.Po' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3f.obj `if test -f 'SbXfBox3f.cpp'; then $(CYGPATH_W) 'SbXfBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3f.cpp'; fi`

base_lst-SbXfBox3f.lo: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3f.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3f.lo `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo" "$(DEPDIR)/base_lst-SbXfBox3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='base_lst-SbXfBox3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3f.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3f.lo `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp

base_lst-SbXfBox3d.o: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3d.o -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3d.o `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" "$(DEPDIR)/base_lst-SbXfBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='base_lst-SbXfBox3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3d.o `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp

base_lst-SbXfBox3d.obj: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3d.obj -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3d.obj `if test -f 'SbXfBox3d.cpp'; then $(CYGPATH_W) 'SbXfBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" "$(DEPDIR)/base_lst-SbXfBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='base_lst-SbXfBox3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3d.Po' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3d.obj `if test -f 'SbXfBox3d.cpp'; then $(CYGPATH_W) 'SbXfBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3d.cpp'; fi`

base_lst-SbXfBox3d.lo: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -MT base_lst-SbXfBox3d.lo -MD -MP -MF "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o base_lst-SbXfBox3d.lo `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo" "$(DEPDIR)/base_lst-SbXfBox3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/base_lst-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='base_lst-SbXfBox3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/base_lst-SbXfBox3d.Plo' tmpdepfile='$(DEPDIR)/base_lst-SbXfBox3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(base_lst_CXXFLAGS) $(CXXFLAGS) -c -o base_lst-SbXfBox3d.lo `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp

libbase_la-all-base-cpp.o: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-all-base-cpp.o -MD -MP -MF "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-all-base-cpp.o `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" "$(DEPDIR)/libbase_la-all-base-cpp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='libbase_la-all-base-cpp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-all-base-cpp.Po' tmpdepfile='$(DEPDIR)/libbase_la-all-base-cpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-all-base-cpp.o `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp

libbase_la-all-base-cpp.obj: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-all-base-cpp.obj -MD -MP -MF "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-all-base-cpp.obj `if test -f 'all-base-cpp.cpp'; then $(CYGPATH_W) 'all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/all-base-cpp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" "$(DEPDIR)/libbase_la-all-base-cpp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='libbase_la-all-base-cpp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-all-base-cpp.Po' tmpdepfile='$(DEPDIR)/libbase_la-all-base-cpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-all-base-cpp.obj `if test -f 'all-base-cpp.cpp'; then $(CYGPATH_W) 'all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/all-base-cpp.cpp'; fi`

libbase_la-all-base-cpp.lo: all-base-cpp.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-all-base-cpp.lo -MD -MP -MF "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-all-base-cpp.lo `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo" "$(DEPDIR)/libbase_la-all-base-cpp.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-all-base-cpp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='all-base-cpp.cpp' object='libbase_la-all-base-cpp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-all-base-cpp.Plo' tmpdepfile='$(DEPDIR)/libbase_la-all-base-cpp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-all-base-cpp.lo `test -f 'all-base-cpp.cpp' || echo '$(srcdir)/'`all-base-cpp.cpp

libbase_la-dict.o: dict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dict.o -MD -MP -MF "$(DEPDIR)/libbase_la-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dict.o `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dict.Tpo" "$(DEPDIR)/libbase_la-dict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='libbase_la-dict.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dict.Po' tmpdepfile='$(DEPDIR)/libbase_la-dict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dict.o `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp

libbase_la-dict.obj: dict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dict.obj -MD -MP -MF "$(DEPDIR)/libbase_la-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dict.obj `if test -f 'dict.cpp'; then $(CYGPATH_W) 'dict.cpp'; else $(CYGPATH_W) '$(srcdir)/dict.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dict.Tpo" "$(DEPDIR)/libbase_la-dict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='libbase_la-dict.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dict.Po' tmpdepfile='$(DEPDIR)/libbase_la-dict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dict.obj `if test -f 'dict.cpp'; then $(CYGPATH_W) 'dict.cpp'; else $(CYGPATH_W) '$(srcdir)/dict.cpp'; fi`

libbase_la-dict.lo: dict.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dict.lo -MD -MP -MF "$(DEPDIR)/libbase_la-dict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dict.lo `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dict.Tpo" "$(DEPDIR)/libbase_la-dict.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dict.cpp' object='libbase_la-dict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dict.Plo' tmpdepfile='$(DEPDIR)/libbase_la-dict.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dict.lo `test -f 'dict.cpp' || echo '$(srcdir)/'`dict.cpp

libbase_la-hash.o: hash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-hash.o -MD -MP -MF "$(DEPDIR)/libbase_la-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-hash.Tpo" "$(DEPDIR)/libbase_la-hash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='libbase_la-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-hash.Po' tmpdepfile='$(DEPDIR)/libbase_la-hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbase_la-hash.obj: hash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-hash.obj -MD -MP -MF "$(DEPDIR)/libbase_la-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-hash.Tpo" "$(DEPDIR)/libbase_la-hash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='libbase_la-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-hash.Po' tmpdepfile='$(DEPDIR)/libbase_la-hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

libbase_la-hash.lo: hash.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-hash.lo -MD -MP -MF "$(DEPDIR)/libbase_la-hash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-hash.Tpo" "$(DEPDIR)/libbase_la-hash.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-hash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hash.cpp' object='libbase_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-hash.Plo' tmpdepfile='$(DEPDIR)/libbase_la-hash.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbase_la-heap.o: heap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-heap.o -MD -MP -MF "$(DEPDIR)/libbase_la-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-heap.o `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-heap.Tpo" "$(DEPDIR)/libbase_la-heap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='libbase_la-heap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-heap.Po' tmpdepfile='$(DEPDIR)/libbase_la-heap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-heap.o `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp

libbase_la-heap.obj: heap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-heap.obj -MD -MP -MF "$(DEPDIR)/libbase_la-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-heap.obj `if test -f 'heap.cpp'; then $(CYGPATH_W) 'heap.cpp'; else $(CYGPATH_W) '$(srcdir)/heap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-heap.Tpo" "$(DEPDIR)/libbase_la-heap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='libbase_la-heap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-heap.Po' tmpdepfile='$(DEPDIR)/libbase_la-heap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-heap.obj `if test -f 'heap.cpp'; then $(CYGPATH_W) 'heap.cpp'; else $(CYGPATH_W) '$(srcdir)/heap.cpp'; fi`

libbase_la-heap.lo: heap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-heap.lo -MD -MP -MF "$(DEPDIR)/libbase_la-heap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-heap.lo `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-heap.Tpo" "$(DEPDIR)/libbase_la-heap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-heap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heap.cpp' object='libbase_la-heap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-heap.Plo' tmpdepfile='$(DEPDIR)/libbase_la-heap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-heap.lo `test -f 'heap.cpp' || echo '$(srcdir)/'`heap.cpp

libbase_la-list.o: list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-list.o -MD -MP -MF "$(DEPDIR)/libbase_la-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-list.o `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-list.Tpo" "$(DEPDIR)/libbase_la-list.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='libbase_la-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-list.Po' tmpdepfile='$(DEPDIR)/libbase_la-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-list.o `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp

libbase_la-list.obj: list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-list.obj -MD -MP -MF "$(DEPDIR)/libbase_la-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-list.obj `if test -f 'list.cpp'; then $(CYGPATH_W) 'list.cpp'; else $(CYGPATH_W) '$(srcdir)/list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-list.Tpo" "$(DEPDIR)/libbase_la-list.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='libbase_la-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-list.Po' tmpdepfile='$(DEPDIR)/libbase_la-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-list.obj `if test -f 'list.cpp'; then $(CYGPATH_W) 'list.cpp'; else $(CYGPATH_W) '$(srcdir)/list.cpp'; fi`

libbase_la-list.lo: list.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-list.lo -MD -MP -MF "$(DEPDIR)/libbase_la-list.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-list.lo `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-list.Tpo" "$(DEPDIR)/libbase_la-list.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-list.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='list.cpp' object='libbase_la-list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-list.Plo' tmpdepfile='$(DEPDIR)/libbase_la-list.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-list.lo `test -f 'list.cpp' || echo '$(srcdir)/'`list.cpp

libbase_la-memalloc.o: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-memalloc.o -MD -MP -MF "$(DEPDIR)/libbase_la-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-memalloc.o `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-memalloc.Tpo" "$(DEPDIR)/libbase_la-memalloc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='libbase_la-memalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-memalloc.Po' tmpdepfile='$(DEPDIR)/libbase_la-memalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-memalloc.o `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp

libbase_la-memalloc.obj: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-memalloc.obj -MD -MP -MF "$(DEPDIR)/libbase_la-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-memalloc.obj `if test -f 'memalloc.cpp'; then $(CYGPATH_W) 'memalloc.cpp'; else $(CYGPATH_W) '$(srcdir)/memalloc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-memalloc.Tpo" "$(DEPDIR)/libbase_la-memalloc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='libbase_la-memalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-memalloc.Po' tmpdepfile='$(DEPDIR)/libbase_la-memalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-memalloc.obj `if test -f 'memalloc.cpp'; then $(CYGPATH_W) 'memalloc.cpp'; else $(CYGPATH_W) '$(srcdir)/memalloc.cpp'; fi`

libbase_la-memalloc.lo: memalloc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-memalloc.lo -MD -MP -MF "$(DEPDIR)/libbase_la-memalloc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-memalloc.lo `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-memalloc.Tpo" "$(DEPDIR)/libbase_la-memalloc.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-memalloc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memalloc.cpp' object='libbase_la-memalloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-memalloc.Plo' tmpdepfile='$(DEPDIR)/libbase_la-memalloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-memalloc.lo `test -f 'memalloc.cpp' || echo '$(srcdir)/'`memalloc.cpp

libbase_la-rbptree.o: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-rbptree.o -MD -MP -MF "$(DEPDIR)/libbase_la-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-rbptree.o `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-rbptree.Tpo" "$(DEPDIR)/libbase_la-rbptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='libbase_la-rbptree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-rbptree.Po' tmpdepfile='$(DEPDIR)/libbase_la-rbptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-rbptree.o `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp

libbase_la-rbptree.obj: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-rbptree.obj -MD -MP -MF "$(DEPDIR)/libbase_la-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-rbptree.obj `if test -f 'rbptree.cpp'; then $(CYGPATH_W) 'rbptree.cpp'; else $(CYGPATH_W) '$(srcdir)/rbptree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-rbptree.Tpo" "$(DEPDIR)/libbase_la-rbptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='libbase_la-rbptree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-rbptree.Po' tmpdepfile='$(DEPDIR)/libbase_la-rbptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-rbptree.obj `if test -f 'rbptree.cpp'; then $(CYGPATH_W) 'rbptree.cpp'; else $(CYGPATH_W) '$(srcdir)/rbptree.cpp'; fi`

libbase_la-rbptree.lo: rbptree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-rbptree.lo -MD -MP -MF "$(DEPDIR)/libbase_la-rbptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-rbptree.lo `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-rbptree.Tpo" "$(DEPDIR)/libbase_la-rbptree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-rbptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rbptree.cpp' object='libbase_la-rbptree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-rbptree.Plo' tmpdepfile='$(DEPDIR)/libbase_la-rbptree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-rbptree.lo `test -f 'rbptree.cpp' || echo '$(srcdir)/'`rbptree.cpp

libbase_la-time.o: time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-time.o -MD -MP -MF "$(DEPDIR)/libbase_la-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-time.o `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-time.Tpo" "$(DEPDIR)/libbase_la-time.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='libbase_la-time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-time.Po' tmpdepfile='$(DEPDIR)/libbase_la-time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-time.o `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp

libbase_la-time.obj: time.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-time.obj -MD -MP -MF "$(DEPDIR)/libbase_la-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-time.obj `if test -f 'time.cpp'; then $(CYGPATH_W) 'time.cpp'; else $(CYGPATH_W) '$(srcdir)/time.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-time.Tpo" "$(DEPDIR)/libbase_la-time.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='libbase_la-time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-time.Po' tmpdepfile='$(DEPDIR)/libbase_la-time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-time.obj `if test -f 'time.cpp'; then $(CYGPATH_W) 'time.cpp'; else $(CYGPATH_W) '$(srcdir)/time.cpp'; fi`

libbase_la-time.lo: time.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-time.lo -MD -MP -MF "$(DEPDIR)/libbase_la-time.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-time.Tpo" "$(DEPDIR)/libbase_la-time.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-time.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cpp' object='libbase_la-time.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-time.Plo' tmpdepfile='$(DEPDIR)/libbase_la-time.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp

libbase_la-string.o: string.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-string.o -MD -MP -MF "$(DEPDIR)/libbase_la-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-string.o `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-string.Tpo" "$(DEPDIR)/libbase_la-string.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='libbase_la-string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-string.Po' tmpdepfile='$(DEPDIR)/libbase_la-string.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-string.o `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp

libbase_la-string.obj: string.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-string.obj -MD -MP -MF "$(DEPDIR)/libbase_la-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-string.obj `if test -f 'string.cpp'; then $(CYGPATH_W) 'string.cpp'; else $(CYGPATH_W) '$(srcdir)/string.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-string.Tpo" "$(DEPDIR)/libbase_la-string.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='libbase_la-string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-string.Po' tmpdepfile='$(DEPDIR)/libbase_la-string.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-string.obj `if test -f 'string.cpp'; then $(CYGPATH_W) 'string.cpp'; else $(CYGPATH_W) '$(srcdir)/string.cpp'; fi`

libbase_la-string.lo: string.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-string.lo -MD -MP -MF "$(DEPDIR)/libbase_la-string.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-string.lo `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-string.Tpo" "$(DEPDIR)/libbase_la-string.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-string.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='string.cpp' object='libbase_la-string.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-string.Plo' tmpdepfile='$(DEPDIR)/libbase_la-string.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-string.lo `test -f 'string.cpp' || echo '$(srcdir)/'`string.cpp

libbase_la-dynarray.o: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dynarray.o -MD -MP -MF "$(DEPDIR)/libbase_la-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dynarray.o `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dynarray.Tpo" "$(DEPDIR)/libbase_la-dynarray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='libbase_la-dynarray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dynarray.Po' tmpdepfile='$(DEPDIR)/libbase_la-dynarray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dynarray.o `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp

libbase_la-dynarray.obj: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dynarray.obj -MD -MP -MF "$(DEPDIR)/libbase_la-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dynarray.obj `if test -f 'dynarray.cpp'; then $(CYGPATH_W) 'dynarray.cpp'; else $(CYGPATH_W) '$(srcdir)/dynarray.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dynarray.Tpo" "$(DEPDIR)/libbase_la-dynarray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='libbase_la-dynarray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dynarray.Po' tmpdepfile='$(DEPDIR)/libbase_la-dynarray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dynarray.obj `if test -f 'dynarray.cpp'; then $(CYGPATH_W) 'dynarray.cpp'; else $(CYGPATH_W) '$(srcdir)/dynarray.cpp'; fi`

libbase_la-dynarray.lo: dynarray.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-dynarray.lo -MD -MP -MF "$(DEPDIR)/libbase_la-dynarray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-dynarray.lo `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-dynarray.Tpo" "$(DEPDIR)/libbase_la-dynarray.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-dynarray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dynarray.cpp' object='libbase_la-dynarray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-dynarray.Plo' tmpdepfile='$(DEPDIR)/libbase_la-dynarray.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-dynarray.lo `test -f 'dynarray.cpp' || echo '$(srcdir)/'`dynarray.cpp

libbase_la-namemap.o: namemap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-namemap.o -MD -MP -MF "$(DEPDIR)/libbase_la-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-namemap.o `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-namemap.Tpo" "$(DEPDIR)/libbase_la-namemap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='libbase_la-namemap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-namemap.Po' tmpdepfile='$(DEPDIR)/libbase_la-namemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-namemap.o `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp

libbase_la-namemap.obj: namemap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-namemap.obj -MD -MP -MF "$(DEPDIR)/libbase_la-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-namemap.obj `if test -f 'namemap.cpp'; then $(CYGPATH_W) 'namemap.cpp'; else $(CYGPATH_W) '$(srcdir)/namemap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-namemap.Tpo" "$(DEPDIR)/libbase_la-namemap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='libbase_la-namemap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-namemap.Po' tmpdepfile='$(DEPDIR)/libbase_la-namemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-namemap.obj `if test -f 'namemap.cpp'; then $(CYGPATH_W) 'namemap.cpp'; else $(CYGPATH_W) '$(srcdir)/namemap.cpp'; fi`

libbase_la-namemap.lo: namemap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-namemap.lo -MD -MP -MF "$(DEPDIR)/libbase_la-namemap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-namemap.lo `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-namemap.Tpo" "$(DEPDIR)/libbase_la-namemap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-namemap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='namemap.cpp' object='libbase_la-namemap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-namemap.Plo' tmpdepfile='$(DEPDIR)/libbase_la-namemap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-namemap.lo `test -f 'namemap.cpp' || echo '$(srcdir)/'`namemap.cpp

libbase_la-SbBSPTree.o: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBSPTree.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBSPTree.o `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" "$(DEPDIR)/libbase_la-SbBSPTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='libbase_la-SbBSPTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBSPTree.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBSPTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBSPTree.o `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp

libbase_la-SbBSPTree.obj: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBSPTree.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBSPTree.obj `if test -f 'SbBSPTree.cpp'; then $(CYGPATH_W) 'SbBSPTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBSPTree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" "$(DEPDIR)/libbase_la-SbBSPTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='libbase_la-SbBSPTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBSPTree.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBSPTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBSPTree.obj `if test -f 'SbBSPTree.cpp'; then $(CYGPATH_W) 'SbBSPTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBSPTree.cpp'; fi`

libbase_la-SbBSPTree.lo: SbBSPTree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBSPTree.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBSPTree.lo `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo" "$(DEPDIR)/libbase_la-SbBSPTree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBSPTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBSPTree.cpp' object='libbase_la-SbBSPTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBSPTree.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBSPTree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBSPTree.lo `test -f 'SbBSPTree.cpp' || echo '$(srcdir)/'`SbBSPTree.cpp

libbase_la-SbByteBuffer.o: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbByteBuffer.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbByteBuffer.o `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" "$(DEPDIR)/libbase_la-SbByteBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='libbase_la-SbByteBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbByteBuffer.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbByteBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbByteBuffer.o `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp

libbase_la-SbByteBuffer.obj: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbByteBuffer.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbByteBuffer.obj `if test -f 'SbByteBuffer.cpp'; then $(CYGPATH_W) 'SbByteBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/SbByteBuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" "$(DEPDIR)/libbase_la-SbByteBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='libbase_la-SbByteBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbByteBuffer.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbByteBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbByteBuffer.obj `if test -f 'SbByteBuffer.cpp'; then $(CYGPATH_W) 'SbByteBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/SbByteBuffer.cpp'; fi`

libbase_la-SbByteBuffer.lo: SbByteBuffer.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbByteBuffer.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbByteBuffer.lo `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo" "$(DEPDIR)/libbase_la-SbByteBuffer.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbByteBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbByteBuffer.cpp' object='libbase_la-SbByteBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbByteBuffer.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbByteBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbByteBuffer.lo `test -f 'SbByteBuffer.cpp' || echo '$(srcdir)/'`SbByteBuffer.cpp

libbase_la-SbBox2s.o: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2s.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2s.o `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo" "$(DEPDIR)/libbase_la-SbBox2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='libbase_la-SbBox2s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2s.o `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp

libbase_la-SbBox2s.obj: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2s.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2s.obj `if test -f 'SbBox2s.cpp'; then $(CYGPATH_W) 'SbBox2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo" "$(DEPDIR)/libbase_la-SbBox2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='libbase_la-SbBox2s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2s.obj `if test -f 'SbBox2s.cpp'; then $(CYGPATH_W) 'SbBox2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2s.cpp'; fi`

libbase_la-SbBox2s.lo: SbBox2s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2s.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2s.lo `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo" "$(DEPDIR)/libbase_la-SbBox2s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2s.cpp' object='libbase_la-SbBox2s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2s.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2s.lo `test -f 'SbBox2s.cpp' || echo '$(srcdir)/'`SbBox2s.cpp

libbase_la-SbBox2i32.o: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2i32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2i32.o `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" "$(DEPDIR)/libbase_la-SbBox2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='libbase_la-SbBox2i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2i32.o `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp

libbase_la-SbBox2i32.obj: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2i32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2i32.obj `if test -f 'SbBox2i32.cpp'; then $(CYGPATH_W) 'SbBox2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" "$(DEPDIR)/libbase_la-SbBox2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='libbase_la-SbBox2i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2i32.obj `if test -f 'SbBox2i32.cpp'; then $(CYGPATH_W) 'SbBox2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2i32.cpp'; fi`

libbase_la-SbBox2i32.lo: SbBox2i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2i32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2i32.lo `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo" "$(DEPDIR)/libbase_la-SbBox2i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2i32.cpp' object='libbase_la-SbBox2i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2i32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2i32.lo `test -f 'SbBox2i32.cpp' || echo '$(srcdir)/'`SbBox2i32.cpp

libbase_la-SbBox2f.o: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2f.o `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo" "$(DEPDIR)/libbase_la-SbBox2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='libbase_la-SbBox2f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2f.o `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp

libbase_la-SbBox2f.obj: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2f.obj `if test -f 'SbBox2f.cpp'; then $(CYGPATH_W) 'SbBox2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo" "$(DEPDIR)/libbase_la-SbBox2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='libbase_la-SbBox2f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2f.obj `if test -f 'SbBox2f.cpp'; then $(CYGPATH_W) 'SbBox2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2f.cpp'; fi`

libbase_la-SbBox2f.lo: SbBox2f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2f.lo `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo" "$(DEPDIR)/libbase_la-SbBox2f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2f.cpp' object='libbase_la-SbBox2f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2f.lo `test -f 'SbBox2f.cpp' || echo '$(srcdir)/'`SbBox2f.cpp

libbase_la-SbBox2d.o: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2d.o `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo" "$(DEPDIR)/libbase_la-SbBox2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='libbase_la-SbBox2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2d.o `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp

libbase_la-SbBox2d.obj: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2d.obj `if test -f 'SbBox2d.cpp'; then $(CYGPATH_W) 'SbBox2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo" "$(DEPDIR)/libbase_la-SbBox2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='libbase_la-SbBox2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2d.obj `if test -f 'SbBox2d.cpp'; then $(CYGPATH_W) 'SbBox2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox2d.cpp'; fi`

libbase_la-SbBox2d.lo: SbBox2d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox2d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox2d.lo `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo" "$(DEPDIR)/libbase_la-SbBox2d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox2d.cpp' object='libbase_la-SbBox2d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox2d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox2d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox2d.lo `test -f 'SbBox2d.cpp' || echo '$(srcdir)/'`SbBox2d.cpp

libbase_la-SbBox3s.o: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3s.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3s.o `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo" "$(DEPDIR)/libbase_la-SbBox3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='libbase_la-SbBox3s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3s.o `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp

libbase_la-SbBox3s.obj: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3s.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3s.obj `if test -f 'SbBox3s.cpp'; then $(CYGPATH_W) 'SbBox3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo" "$(DEPDIR)/libbase_la-SbBox3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='libbase_la-SbBox3s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3s.obj `if test -f 'SbBox3s.cpp'; then $(CYGPATH_W) 'SbBox3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3s.cpp'; fi`

libbase_la-SbBox3s.lo: SbBox3s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3s.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3s.lo `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo" "$(DEPDIR)/libbase_la-SbBox3s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3s.cpp' object='libbase_la-SbBox3s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3s.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3s.lo `test -f 'SbBox3s.cpp' || echo '$(srcdir)/'`SbBox3s.cpp

libbase_la-SbBox3i32.o: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3i32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3i32.o `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" "$(DEPDIR)/libbase_la-SbBox3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='libbase_la-SbBox3i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3i32.o `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp

libbase_la-SbBox3i32.obj: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3i32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3i32.obj `if test -f 'SbBox3i32.cpp'; then $(CYGPATH_W) 'SbBox3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" "$(DEPDIR)/libbase_la-SbBox3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='libbase_la-SbBox3i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3i32.obj `if test -f 'SbBox3i32.cpp'; then $(CYGPATH_W) 'SbBox3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3i32.cpp'; fi`

libbase_la-SbBox3i32.lo: SbBox3i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3i32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3i32.lo `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo" "$(DEPDIR)/libbase_la-SbBox3i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3i32.cpp' object='libbase_la-SbBox3i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3i32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3i32.lo `test -f 'SbBox3i32.cpp' || echo '$(srcdir)/'`SbBox3i32.cpp

libbase_la-SbBox3f.o: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3f.o `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo" "$(DEPDIR)/libbase_la-SbBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='libbase_la-SbBox3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3f.o `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp

libbase_la-SbBox3f.obj: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3f.obj `if test -f 'SbBox3f.cpp'; then $(CYGPATH_W) 'SbBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo" "$(DEPDIR)/libbase_la-SbBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='libbase_la-SbBox3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3f.obj `if test -f 'SbBox3f.cpp'; then $(CYGPATH_W) 'SbBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3f.cpp'; fi`

libbase_la-SbBox3f.lo: SbBox3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3f.lo `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo" "$(DEPDIR)/libbase_la-SbBox3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3f.cpp' object='libbase_la-SbBox3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3f.lo `test -f 'SbBox3f.cpp' || echo '$(srcdir)/'`SbBox3f.cpp

libbase_la-SbBox3d.o: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3d.o `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo" "$(DEPDIR)/libbase_la-SbBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='libbase_la-SbBox3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3d.o `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp

libbase_la-SbBox3d.obj: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3d.obj `if test -f 'SbBox3d.cpp'; then $(CYGPATH_W) 'SbBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo" "$(DEPDIR)/libbase_la-SbBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='libbase_la-SbBox3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3d.obj `if test -f 'SbBox3d.cpp'; then $(CYGPATH_W) 'SbBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbBox3d.cpp'; fi`

libbase_la-SbBox3d.lo: SbBox3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbBox3d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbBox3d.lo `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo" "$(DEPDIR)/libbase_la-SbBox3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbBox3d.cpp' object='libbase_la-SbBox3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbBox3d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbBox3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbBox3d.lo `test -f 'SbBox3d.cpp' || echo '$(srcdir)/'`SbBox3d.cpp

libbase_la-SbClip.o: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbClip.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbClip.o `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbClip.Tpo" "$(DEPDIR)/libbase_la-SbClip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='libbase_la-SbClip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbClip.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbClip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbClip.o `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp

libbase_la-SbClip.obj: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbClip.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbClip.obj `if test -f 'SbClip.cpp'; then $(CYGPATH_W) 'SbClip.cpp'; else $(CYGPATH_W) '$(srcdir)/SbClip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbClip.Tpo" "$(DEPDIR)/libbase_la-SbClip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='libbase_la-SbClip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbClip.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbClip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbClip.obj `if test -f 'SbClip.cpp'; then $(CYGPATH_W) 'SbClip.cpp'; else $(CYGPATH_W) '$(srcdir)/SbClip.cpp'; fi`

libbase_la-SbClip.lo: SbClip.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbClip.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbClip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbClip.lo `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbClip.Tpo" "$(DEPDIR)/libbase_la-SbClip.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbClip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbClip.cpp' object='libbase_la-SbClip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbClip.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbClip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbClip.lo `test -f 'SbClip.cpp' || echo '$(srcdir)/'`SbClip.cpp

libbase_la-SbColor.o: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor.o `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor.Tpo" "$(DEPDIR)/libbase_la-SbColor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='libbase_la-SbColor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbColor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor.o `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp

libbase_la-SbColor.obj: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor.obj `if test -f 'SbColor.cpp'; then $(CYGPATH_W) 'SbColor.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor.Tpo" "$(DEPDIR)/libbase_la-SbColor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='libbase_la-SbColor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbColor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor.obj `if test -f 'SbColor.cpp'; then $(CYGPATH_W) 'SbColor.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor.cpp'; fi`

libbase_la-SbColor.lo: SbColor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor.lo `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor.Tpo" "$(DEPDIR)/libbase_la-SbColor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor.cpp' object='libbase_la-SbColor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbColor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor.lo `test -f 'SbColor.cpp' || echo '$(srcdir)/'`SbColor.cpp

libbase_la-SbColor4f.o: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor4f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor4f.o `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo" "$(DEPDIR)/libbase_la-SbColor4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='libbase_la-SbColor4f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor4f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbColor4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor4f.o `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp

libbase_la-SbColor4f.obj: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor4f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor4f.obj `if test -f 'SbColor4f.cpp'; then $(CYGPATH_W) 'SbColor4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor4f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo" "$(DEPDIR)/libbase_la-SbColor4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='libbase_la-SbColor4f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor4f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbColor4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor4f.obj `if test -f 'SbColor4f.cpp'; then $(CYGPATH_W) 'SbColor4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbColor4f.cpp'; fi`

libbase_la-SbColor4f.lo: SbColor4f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbColor4f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbColor4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbColor4f.lo `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo" "$(DEPDIR)/libbase_la-SbColor4f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbColor4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbColor4f.cpp' object='libbase_la-SbColor4f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbColor4f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbColor4f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbColor4f.lo `test -f 'SbColor4f.cpp' || echo '$(srcdir)/'`SbColor4f.cpp

libbase_la-SbCylinder.o: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbCylinder.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbCylinder.o `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo" "$(DEPDIR)/libbase_la-SbCylinder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='libbase_la-SbCylinder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbCylinder.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbCylinder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbCylinder.o `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp

libbase_la-SbCylinder.obj: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbCylinder.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbCylinder.obj `if test -f 'SbCylinder.cpp'; then $(CYGPATH_W) 'SbCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/SbCylinder.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo" "$(DEPDIR)/libbase_la-SbCylinder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='libbase_la-SbCylinder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbCylinder.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbCylinder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbCylinder.obj `if test -f 'SbCylinder.cpp'; then $(CYGPATH_W) 'SbCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/SbCylinder.cpp'; fi`

libbase_la-SbCylinder.lo: SbCylinder.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbCylinder.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbCylinder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbCylinder.lo `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo" "$(DEPDIR)/libbase_la-SbCylinder.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbCylinder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbCylinder.cpp' object='libbase_la-SbCylinder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbCylinder.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbCylinder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbCylinder.lo `test -f 'SbCylinder.cpp' || echo '$(srcdir)/'`SbCylinder.cpp

libbase_la-SbDict.o: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDict.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDict.o `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDict.Tpo" "$(DEPDIR)/libbase_la-SbDict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='libbase_la-SbDict.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDict.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDict.o `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp

libbase_la-SbDict.obj: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDict.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDict.obj `if test -f 'SbDict.cpp'; then $(CYGPATH_W) 'SbDict.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDict.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDict.Tpo" "$(DEPDIR)/libbase_la-SbDict.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='libbase_la-SbDict.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDict.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDict.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDict.obj `if test -f 'SbDict.cpp'; then $(CYGPATH_W) 'SbDict.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDict.cpp'; fi`

libbase_la-SbDict.lo: SbDict.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDict.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDict.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDict.lo `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDict.Tpo" "$(DEPDIR)/libbase_la-SbDict.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDict.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDict.cpp' object='libbase_la-SbDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDict.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDict.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDict.lo `test -f 'SbDict.cpp' || echo '$(srcdir)/'`SbDict.cpp

libbase_la-SbDPLine.o: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPLine.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPLine.o `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo" "$(DEPDIR)/libbase_la-SbDPLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='libbase_la-SbDPLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPLine.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPLine.o `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp

libbase_la-SbDPLine.obj: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPLine.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPLine.obj `if test -f 'SbDPLine.cpp'; then $(CYGPATH_W) 'SbDPLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPLine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo" "$(DEPDIR)/libbase_la-SbDPLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='libbase_la-SbDPLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPLine.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPLine.obj `if test -f 'SbDPLine.cpp'; then $(CYGPATH_W) 'SbDPLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPLine.cpp'; fi`

libbase_la-SbDPLine.lo: SbDPLine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPLine.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPLine.lo `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo" "$(DEPDIR)/libbase_la-SbDPLine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPLine.cpp' object='libbase_la-SbDPLine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPLine.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDPLine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPLine.lo `test -f 'SbDPLine.cpp' || echo '$(srcdir)/'`SbDPLine.cpp

libbase_la-SbDPMatrix.o: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPMatrix.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPMatrix.o `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" "$(DEPDIR)/libbase_la-SbDPMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='libbase_la-SbDPMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPMatrix.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPMatrix.o `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp

libbase_la-SbDPMatrix.obj: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPMatrix.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPMatrix.obj `if test -f 'SbDPMatrix.cpp'; then $(CYGPATH_W) 'SbDPMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPMatrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" "$(DEPDIR)/libbase_la-SbDPMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='libbase_la-SbDPMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPMatrix.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPMatrix.obj `if test -f 'SbDPMatrix.cpp'; then $(CYGPATH_W) 'SbDPMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPMatrix.cpp'; fi`

libbase_la-SbDPMatrix.lo: SbDPMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPMatrix.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPMatrix.lo `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo" "$(DEPDIR)/libbase_la-SbDPMatrix.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPMatrix.cpp' object='libbase_la-SbDPMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPMatrix.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDPMatrix.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPMatrix.lo `test -f 'SbDPMatrix.cpp' || echo '$(srcdir)/'`SbDPMatrix.cpp

libbase_la-SbDPPlane.o: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPPlane.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPPlane.o `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" "$(DEPDIR)/libbase_la-SbDPPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='libbase_la-SbDPPlane.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPPlane.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPPlane.o `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp

libbase_la-SbDPPlane.obj: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPPlane.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPPlane.obj `if test -f 'SbDPPlane.cpp'; then $(CYGPATH_W) 'SbDPPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPPlane.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" "$(DEPDIR)/libbase_la-SbDPPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='libbase_la-SbDPPlane.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPPlane.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPPlane.obj `if test -f 'SbDPPlane.cpp'; then $(CYGPATH_W) 'SbDPPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPPlane.cpp'; fi`

libbase_la-SbDPPlane.lo: SbDPPlane.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPPlane.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPPlane.lo `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo" "$(DEPDIR)/libbase_la-SbDPPlane.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPPlane.cpp' object='libbase_la-SbDPPlane.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPPlane.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDPPlane.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPPlane.lo `test -f 'SbDPPlane.cpp' || echo '$(srcdir)/'`SbDPPlane.cpp

libbase_la-SbDPRotation.o: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPRotation.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPRotation.o `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" "$(DEPDIR)/libbase_la-SbDPRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='libbase_la-SbDPRotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPRotation.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPRotation.o `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp

libbase_la-SbDPRotation.obj: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPRotation.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPRotation.obj `if test -f 'SbDPRotation.cpp'; then $(CYGPATH_W) 'SbDPRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPRotation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" "$(DEPDIR)/libbase_la-SbDPRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='libbase_la-SbDPRotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPRotation.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPRotation.obj `if test -f 'SbDPRotation.cpp'; then $(CYGPATH_W) 'SbDPRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPRotation.cpp'; fi`

libbase_la-SbDPRotation.lo: SbDPRotation.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPRotation.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPRotation.lo `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo" "$(DEPDIR)/libbase_la-SbDPRotation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPRotation.cpp' object='libbase_la-SbDPRotation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPRotation.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDPRotation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPRotation.lo `test -f 'SbDPRotation.cpp' || echo '$(srcdir)/'`SbDPRotation.cpp

libbase_la-SbHeap.o: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbHeap.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbHeap.o `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbHeap.Tpo" "$(DEPDIR)/libbase_la-SbHeap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='libbase_la-SbHeap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbHeap.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbHeap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbHeap.o `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp

libbase_la-SbHeap.obj: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbHeap.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbHeap.obj `if test -f 'SbHeap.cpp'; then $(CYGPATH_W) 'SbHeap.cpp'; else $(CYGPATH_W) '$(srcdir)/SbHeap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbHeap.Tpo" "$(DEPDIR)/libbase_la-SbHeap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='libbase_la-SbHeap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbHeap.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbHeap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbHeap.obj `if test -f 'SbHeap.cpp'; then $(CYGPATH_W) 'SbHeap.cpp'; else $(CYGPATH_W) '$(srcdir)/SbHeap.cpp'; fi`

libbase_la-SbHeap.lo: SbHeap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbHeap.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbHeap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbHeap.lo `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbHeap.Tpo" "$(DEPDIR)/libbase_la-SbHeap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbHeap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbHeap.cpp' object='libbase_la-SbHeap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbHeap.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbHeap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbHeap.lo `test -f 'SbHeap.cpp' || echo '$(srcdir)/'`SbHeap.cpp

libbase_la-SbImage.o: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbImage.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbImage.o `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbImage.Tpo" "$(DEPDIR)/libbase_la-SbImage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='libbase_la-SbImage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbImage.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbImage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbImage.o `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp

libbase_la-SbImage.obj: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbImage.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbImage.obj `if test -f 'SbImage.cpp'; then $(CYGPATH_W) 'SbImage.cpp'; else $(CYGPATH_W) '$(srcdir)/SbImage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbImage.Tpo" "$(DEPDIR)/libbase_la-SbImage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='libbase_la-SbImage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbImage.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbImage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbImage.obj `if test -f 'SbImage.cpp'; then $(CYGPATH_W) 'SbImage.cpp'; else $(CYGPATH_W) '$(srcdir)/SbImage.cpp'; fi`

libbase_la-SbImage.lo: SbImage.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbImage.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbImage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbImage.lo `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbImage.Tpo" "$(DEPDIR)/libbase_la-SbImage.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbImage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbImage.cpp' object='libbase_la-SbImage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbImage.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbImage.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbImage.lo `test -f 'SbImage.cpp' || echo '$(srcdir)/'`SbImage.cpp

libbase_la-SbLine.o: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbLine.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbLine.o `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbLine.Tpo" "$(DEPDIR)/libbase_la-SbLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='libbase_la-SbLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbLine.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbLine.o `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp

libbase_la-SbLine.obj: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbLine.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbLine.obj `if test -f 'SbLine.cpp'; then $(CYGPATH_W) 'SbLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbLine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbLine.Tpo" "$(DEPDIR)/libbase_la-SbLine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='libbase_la-SbLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbLine.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbLine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbLine.obj `if test -f 'SbLine.cpp'; then $(CYGPATH_W) 'SbLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SbLine.cpp'; fi`

libbase_la-SbLine.lo: SbLine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbLine.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbLine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbLine.lo `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbLine.Tpo" "$(DEPDIR)/libbase_la-SbLine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbLine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbLine.cpp' object='libbase_la-SbLine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbLine.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbLine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbLine.lo `test -f 'SbLine.cpp' || echo '$(srcdir)/'`SbLine.cpp

libbase_la-SbMatrix.o: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbMatrix.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbMatrix.o `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo" "$(DEPDIR)/libbase_la-SbMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='libbase_la-SbMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbMatrix.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbMatrix.o `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp

libbase_la-SbMatrix.obj: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbMatrix.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbMatrix.obj `if test -f 'SbMatrix.cpp'; then $(CYGPATH_W) 'SbMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbMatrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo" "$(DEPDIR)/libbase_la-SbMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='libbase_la-SbMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbMatrix.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbMatrix.obj `if test -f 'SbMatrix.cpp'; then $(CYGPATH_W) 'SbMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/SbMatrix.cpp'; fi`

libbase_la-SbMatrix.lo: SbMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbMatrix.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbMatrix.lo `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo" "$(DEPDIR)/libbase_la-SbMatrix.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbMatrix.cpp' object='libbase_la-SbMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbMatrix.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbMatrix.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbMatrix.lo `test -f 'SbMatrix.cpp' || echo '$(srcdir)/'`SbMatrix.cpp

libbase_la-SbName.o: SbName.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbName.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbName.o `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbName.Tpo" "$(DEPDIR)/libbase_la-SbName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='libbase_la-SbName.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbName.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbName.o `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp

libbase_la-SbName.obj: SbName.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbName.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbName.obj `if test -f 'SbName.cpp'; then $(CYGPATH_W) 'SbName.cpp'; else $(CYGPATH_W) '$(srcdir)/SbName.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbName.Tpo" "$(DEPDIR)/libbase_la-SbName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='libbase_la-SbName.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbName.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbName.obj `if test -f 'SbName.cpp'; then $(CYGPATH_W) 'SbName.cpp'; else $(CYGPATH_W) '$(srcdir)/SbName.cpp'; fi`

libbase_la-SbName.lo: SbName.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbName.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbName.lo `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbName.Tpo" "$(DEPDIR)/libbase_la-SbName.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbName.cpp' object='libbase_la-SbName.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbName.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbName.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbName.lo `test -f 'SbName.cpp' || echo '$(srcdir)/'`SbName.cpp

libbase_la-SbOctTree.o: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbOctTree.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbOctTree.o `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo" "$(DEPDIR)/libbase_la-SbOctTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='libbase_la-SbOctTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbOctTree.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbOctTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbOctTree.o `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp

libbase_la-SbOctTree.obj: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbOctTree.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbOctTree.obj `if test -f 'SbOctTree.cpp'; then $(CYGPATH_W) 'SbOctTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbOctTree.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo" "$(DEPDIR)/libbase_la-SbOctTree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='libbase_la-SbOctTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbOctTree.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbOctTree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbOctTree.obj `if test -f 'SbOctTree.cpp'; then $(CYGPATH_W) 'SbOctTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SbOctTree.cpp'; fi`

libbase_la-SbOctTree.lo: SbOctTree.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbOctTree.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbOctTree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbOctTree.lo `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo" "$(DEPDIR)/libbase_la-SbOctTree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbOctTree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbOctTree.cpp' object='libbase_la-SbOctTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbOctTree.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbOctTree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbOctTree.lo `test -f 'SbOctTree.cpp' || echo '$(srcdir)/'`SbOctTree.cpp

libbase_la-SbPlane.o: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbPlane.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbPlane.o `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbPlane.Tpo" "$(DEPDIR)/libbase_la-SbPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='libbase_la-SbPlane.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbPlane.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbPlane.o `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp

libbase_la-SbPlane.obj: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbPlane.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbPlane.obj `if test -f 'SbPlane.cpp'; then $(CYGPATH_W) 'SbPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbPlane.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbPlane.Tpo" "$(DEPDIR)/libbase_la-SbPlane.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='libbase_la-SbPlane.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbPlane.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbPlane.obj `if test -f 'SbPlane.cpp'; then $(CYGPATH_W) 'SbPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/SbPlane.cpp'; fi`

libbase_la-SbPlane.lo: SbPlane.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbPlane.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbPlane.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbPlane.lo `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbPlane.Tpo" "$(DEPDIR)/libbase_la-SbPlane.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbPlane.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbPlane.cpp' object='libbase_la-SbPlane.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbPlane.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbPlane.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbPlane.lo `test -f 'SbPlane.cpp' || echo '$(srcdir)/'`SbPlane.cpp

libbase_la-SbRotation.o: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbRotation.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbRotation.o `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbRotation.Tpo" "$(DEPDIR)/libbase_la-SbRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='libbase_la-SbRotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbRotation.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbRotation.o `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp

libbase_la-SbRotation.obj: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbRotation.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbRotation.obj `if test -f 'SbRotation.cpp'; then $(CYGPATH_W) 'SbRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbRotation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbRotation.Tpo" "$(DEPDIR)/libbase_la-SbRotation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='libbase_la-SbRotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbRotation.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbRotation.obj `if test -f 'SbRotation.cpp'; then $(CYGPATH_W) 'SbRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/SbRotation.cpp'; fi`

libbase_la-SbRotation.lo: SbRotation.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbRotation.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbRotation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbRotation.lo `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbRotation.Tpo" "$(DEPDIR)/libbase_la-SbRotation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbRotation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbRotation.cpp' object='libbase_la-SbRotation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbRotation.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbRotation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbRotation.lo `test -f 'SbRotation.cpp' || echo '$(srcdir)/'`SbRotation.cpp

libbase_la-SbSphere.o: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbSphere.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbSphere.o `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbSphere.Tpo" "$(DEPDIR)/libbase_la-SbSphere.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='libbase_la-SbSphere.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbSphere.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbSphere.o `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp

libbase_la-SbSphere.obj: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbSphere.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbSphere.obj `if test -f 'SbSphere.cpp'; then $(CYGPATH_W) 'SbSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/SbSphere.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbSphere.Tpo" "$(DEPDIR)/libbase_la-SbSphere.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='libbase_la-SbSphere.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbSphere.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbSphere.obj `if test -f 'SbSphere.cpp'; then $(CYGPATH_W) 'SbSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/SbSphere.cpp'; fi`

libbase_la-SbSphere.lo: SbSphere.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbSphere.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbSphere.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbSphere.lo `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbSphere.Tpo" "$(DEPDIR)/libbase_la-SbSphere.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbSphere.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbSphere.cpp' object='libbase_la-SbSphere.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbSphere.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbSphere.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbSphere.lo `test -f 'SbSphere.cpp' || echo '$(srcdir)/'`SbSphere.cpp

libbase_la-SbString.o: SbString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbString.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbString.o `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbString.Tpo" "$(DEPDIR)/libbase_la-SbString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='libbase_la-SbString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbString.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbString.o `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp

libbase_la-SbString.obj: SbString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbString.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbString.obj `if test -f 'SbString.cpp'; then $(CYGPATH_W) 'SbString.cpp'; else $(CYGPATH_W) '$(srcdir)/SbString.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbString.Tpo" "$(DEPDIR)/libbase_la-SbString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='libbase_la-SbString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbString.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbString.obj `if test -f 'SbString.cpp'; then $(CYGPATH_W) 'SbString.cpp'; else $(CYGPATH_W) '$(srcdir)/SbString.cpp'; fi`

libbase_la-SbString.lo: SbString.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbString.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbString.lo `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbString.Tpo" "$(DEPDIR)/libbase_la-SbString.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbString.cpp' object='libbase_la-SbString.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbString.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbString.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbString.lo `test -f 'SbString.cpp' || echo '$(srcdir)/'`SbString.cpp

libbase_la-SbTesselator.o: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTesselator.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTesselator.o `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo" "$(DEPDIR)/libbase_la-SbTesselator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='libbase_la-SbTesselator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTesselator.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbTesselator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTesselator.o `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp

libbase_la-SbTesselator.obj: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTesselator.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTesselator.obj `if test -f 'SbTesselator.cpp'; then $(CYGPATH_W) 'SbTesselator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTesselator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo" "$(DEPDIR)/libbase_la-SbTesselator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='libbase_la-SbTesselator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTesselator.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbTesselator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTesselator.obj `if test -f 'SbTesselator.cpp'; then $(CYGPATH_W) 'SbTesselator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTesselator.cpp'; fi`

libbase_la-SbTesselator.lo: SbTesselator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTesselator.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbTesselator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTesselator.lo `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo" "$(DEPDIR)/libbase_la-SbTesselator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTesselator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTesselator.cpp' object='libbase_la-SbTesselator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTesselator.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbTesselator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTesselator.lo `test -f 'SbTesselator.cpp' || echo '$(srcdir)/'`SbTesselator.cpp

libbase_la-SbGLUTessellator.o: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbGLUTessellator.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbGLUTessellator.o `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" "$(DEPDIR)/libbase_la-SbGLUTessellator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='libbase_la-SbGLUTessellator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbGLUTessellator.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbGLUTessellator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbGLUTessellator.o `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp

libbase_la-SbGLUTessellator.obj: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbGLUTessellator.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbGLUTessellator.obj `if test -f 'SbGLUTessellator.cpp'; then $(CYGPATH_W) 'SbGLUTessellator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbGLUTessellator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" "$(DEPDIR)/libbase_la-SbGLUTessellator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='libbase_la-SbGLUTessellator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbGLUTessellator.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbGLUTessellator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbGLUTessellator.obj `if test -f 'SbGLUTessellator.cpp'; then $(CYGPATH_W) 'SbGLUTessellator.cpp'; else $(CYGPATH_W) '$(srcdir)/SbGLUTessellator.cpp'; fi`

libbase_la-SbGLUTessellator.lo: SbGLUTessellator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbGLUTessellator.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbGLUTessellator.lo `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo" "$(DEPDIR)/libbase_la-SbGLUTessellator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbGLUTessellator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbGLUTessellator.cpp' object='libbase_la-SbGLUTessellator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbGLUTessellator.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbGLUTessellator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbGLUTessellator.lo `test -f 'SbGLUTessellator.cpp' || echo '$(srcdir)/'`SbGLUTessellator.cpp

libbase_la-SbTime.o: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTime.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTime.o `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTime.Tpo" "$(DEPDIR)/libbase_la-SbTime.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='libbase_la-SbTime.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTime.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbTime.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTime.o `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp

libbase_la-SbTime.obj: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTime.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTime.obj `if test -f 'SbTime.cpp'; then $(CYGPATH_W) 'SbTime.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTime.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTime.Tpo" "$(DEPDIR)/libbase_la-SbTime.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='libbase_la-SbTime.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTime.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbTime.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTime.obj `if test -f 'SbTime.cpp'; then $(CYGPATH_W) 'SbTime.cpp'; else $(CYGPATH_W) '$(srcdir)/SbTime.cpp'; fi`

libbase_la-SbTime.lo: SbTime.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbTime.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbTime.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbTime.lo `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbTime.Tpo" "$(DEPDIR)/libbase_la-SbTime.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbTime.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbTime.cpp' object='libbase_la-SbTime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbTime.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbTime.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbTime.lo `test -f 'SbTime.cpp' || echo '$(srcdir)/'`SbTime.cpp

libbase_la-SbVec2b.o: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2b.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2b.o `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo" "$(DEPDIR)/libbase_la-SbVec2b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='libbase_la-SbVec2b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2b.o `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp

libbase_la-SbVec2b.obj: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2b.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2b.obj `if test -f 'SbVec2b.cpp'; then $(CYGPATH_W) 'SbVec2b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo" "$(DEPDIR)/libbase_la-SbVec2b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='libbase_la-SbVec2b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2b.obj `if test -f 'SbVec2b.cpp'; then $(CYGPATH_W) 'SbVec2b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2b.cpp'; fi`

libbase_la-SbVec2b.lo: SbVec2b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2b.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2b.lo `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo" "$(DEPDIR)/libbase_la-SbVec2b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2b.cpp' object='libbase_la-SbVec2b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2b.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2b.lo `test -f 'SbVec2b.cpp' || echo '$(srcdir)/'`SbVec2b.cpp

libbase_la-SbVec2ub.o: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ub.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ub.o `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" "$(DEPDIR)/libbase_la-SbVec2ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='libbase_la-SbVec2ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ub.o `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp

libbase_la-SbVec2ub.obj: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ub.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ub.obj `if test -f 'SbVec2ub.cpp'; then $(CYGPATH_W) 'SbVec2ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" "$(DEPDIR)/libbase_la-SbVec2ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='libbase_la-SbVec2ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ub.obj `if test -f 'SbVec2ub.cpp'; then $(CYGPATH_W) 'SbVec2ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ub.cpp'; fi`

libbase_la-SbVec2ub.lo: SbVec2ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ub.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ub.lo `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo" "$(DEPDIR)/libbase_la-SbVec2ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ub.cpp' object='libbase_la-SbVec2ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ub.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ub.lo `test -f 'SbVec2ub.cpp' || echo '$(srcdir)/'`SbVec2ub.cpp

libbase_la-SbVec2s.o: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2s.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2s.o `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo" "$(DEPDIR)/libbase_la-SbVec2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='libbase_la-SbVec2s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2s.o `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp

libbase_la-SbVec2s.obj: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2s.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2s.obj `if test -f 'SbVec2s.cpp'; then $(CYGPATH_W) 'SbVec2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo" "$(DEPDIR)/libbase_la-SbVec2s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='libbase_la-SbVec2s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2s.obj `if test -f 'SbVec2s.cpp'; then $(CYGPATH_W) 'SbVec2s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2s.cpp'; fi`

libbase_la-SbVec2s.lo: SbVec2s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2s.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2s.lo `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo" "$(DEPDIR)/libbase_la-SbVec2s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2s.cpp' object='libbase_la-SbVec2s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2s.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2s.lo `test -f 'SbVec2s.cpp' || echo '$(srcdir)/'`SbVec2s.cpp

libbase_la-SbVec2us.o: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2us.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2us.o `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo" "$(DEPDIR)/libbase_la-SbVec2us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='libbase_la-SbVec2us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2us.o `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp

libbase_la-SbVec2us.obj: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2us.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2us.obj `if test -f 'SbVec2us.cpp'; then $(CYGPATH_W) 'SbVec2us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo" "$(DEPDIR)/libbase_la-SbVec2us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='libbase_la-SbVec2us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2us.obj `if test -f 'SbVec2us.cpp'; then $(CYGPATH_W) 'SbVec2us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2us.cpp'; fi`

libbase_la-SbVec2us.lo: SbVec2us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2us.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2us.lo `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo" "$(DEPDIR)/libbase_la-SbVec2us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2us.cpp' object='libbase_la-SbVec2us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2us.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2us.lo `test -f 'SbVec2us.cpp' || echo '$(srcdir)/'`SbVec2us.cpp

libbase_la-SbVec2i32.o: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2i32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2i32.o `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" "$(DEPDIR)/libbase_la-SbVec2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='libbase_la-SbVec2i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2i32.o `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp

libbase_la-SbVec2i32.obj: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2i32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2i32.obj `if test -f 'SbVec2i32.cpp'; then $(CYGPATH_W) 'SbVec2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" "$(DEPDIR)/libbase_la-SbVec2i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='libbase_la-SbVec2i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2i32.obj `if test -f 'SbVec2i32.cpp'; then $(CYGPATH_W) 'SbVec2i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2i32.cpp'; fi`

libbase_la-SbVec2i32.lo: SbVec2i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2i32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2i32.lo `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo" "$(DEPDIR)/libbase_la-SbVec2i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2i32.cpp' object='libbase_la-SbVec2i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2i32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2i32.lo `test -f 'SbVec2i32.cpp' || echo '$(srcdir)/'`SbVec2i32.cpp

libbase_la-SbVec2ui32.o: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ui32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ui32.o `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec2ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='libbase_la-SbVec2ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ui32.o `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp

libbase_la-SbVec2ui32.obj: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ui32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ui32.obj `if test -f 'SbVec2ui32.cpp'; then $(CYGPATH_W) 'SbVec2ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec2ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='libbase_la-SbVec2ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ui32.obj `if test -f 'SbVec2ui32.cpp'; then $(CYGPATH_W) 'SbVec2ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2ui32.cpp'; fi`

libbase_la-SbVec2ui32.lo: SbVec2ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2ui32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2ui32.lo `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec2ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2ui32.cpp' object='libbase_la-SbVec2ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2ui32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2ui32.lo `test -f 'SbVec2ui32.cpp' || echo '$(srcdir)/'`SbVec2ui32.cpp

libbase_la-SbVec2f.o: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2f.o `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo" "$(DEPDIR)/libbase_la-SbVec2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='libbase_la-SbVec2f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2f.o `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp

libbase_la-SbVec2f.obj: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2f.obj `if test -f 'SbVec2f.cpp'; then $(CYGPATH_W) 'SbVec2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo" "$(DEPDIR)/libbase_la-SbVec2f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='libbase_la-SbVec2f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2f.obj `if test -f 'SbVec2f.cpp'; then $(CYGPATH_W) 'SbVec2f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2f.cpp'; fi`

libbase_la-SbVec2f.lo: SbVec2f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2f.lo `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo" "$(DEPDIR)/libbase_la-SbVec2f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2f.cpp' object='libbase_la-SbVec2f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2f.lo `test -f 'SbVec2f.cpp' || echo '$(srcdir)/'`SbVec2f.cpp

libbase_la-SbVec2d.o: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2d.o `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo" "$(DEPDIR)/libbase_la-SbVec2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='libbase_la-SbVec2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2d.o `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp

libbase_la-SbVec2d.obj: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2d.obj `if test -f 'SbVec2d.cpp'; then $(CYGPATH_W) 'SbVec2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo" "$(DEPDIR)/libbase_la-SbVec2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='libbase_la-SbVec2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2d.obj `if test -f 'SbVec2d.cpp'; then $(CYGPATH_W) 'SbVec2d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec2d.cpp'; fi`

libbase_la-SbVec2d.lo: SbVec2d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec2d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec2d.lo `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo" "$(DEPDIR)/libbase_la-SbVec2d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec2d.cpp' object='libbase_la-SbVec2d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec2d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec2d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec2d.lo `test -f 'SbVec2d.cpp' || echo '$(srcdir)/'`SbVec2d.cpp

libbase_la-SbVec3b.o: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3b.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3b.o `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo" "$(DEPDIR)/libbase_la-SbVec3b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='libbase_la-SbVec3b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3b.o `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp

libbase_la-SbVec3b.obj: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3b.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3b.obj `if test -f 'SbVec3b.cpp'; then $(CYGPATH_W) 'SbVec3b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo" "$(DEPDIR)/libbase_la-SbVec3b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='libbase_la-SbVec3b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3b.obj `if test -f 'SbVec3b.cpp'; then $(CYGPATH_W) 'SbVec3b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3b.cpp'; fi`

libbase_la-SbVec3b.lo: SbVec3b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3b.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3b.lo `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo" "$(DEPDIR)/libbase_la-SbVec3b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3b.cpp' object='libbase_la-SbVec3b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3b.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3b.lo `test -f 'SbVec3b.cpp' || echo '$(srcdir)/'`SbVec3b.cpp

libbase_la-SbVec3ub.o: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ub.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ub.o `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" "$(DEPDIR)/libbase_la-SbVec3ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='libbase_la-SbVec3ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ub.o `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp

libbase_la-SbVec3ub.obj: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ub.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ub.obj `if test -f 'SbVec3ub.cpp'; then $(CYGPATH_W) 'SbVec3ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" "$(DEPDIR)/libbase_la-SbVec3ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='libbase_la-SbVec3ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ub.obj `if test -f 'SbVec3ub.cpp'; then $(CYGPATH_W) 'SbVec3ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ub.cpp'; fi`

libbase_la-SbVec3ub.lo: SbVec3ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ub.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ub.lo `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo" "$(DEPDIR)/libbase_la-SbVec3ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ub.cpp' object='libbase_la-SbVec3ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ub.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ub.lo `test -f 'SbVec3ub.cpp' || echo '$(srcdir)/'`SbVec3ub.cpp

libbase_la-SbVec3s.o: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3s.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3s.o `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo" "$(DEPDIR)/libbase_la-SbVec3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='libbase_la-SbVec3s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3s.o `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp

libbase_la-SbVec3s.obj: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3s.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3s.obj `if test -f 'SbVec3s.cpp'; then $(CYGPATH_W) 'SbVec3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo" "$(DEPDIR)/libbase_la-SbVec3s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='libbase_la-SbVec3s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3s.obj `if test -f 'SbVec3s.cpp'; then $(CYGPATH_W) 'SbVec3s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3s.cpp'; fi`

libbase_la-SbVec3s.lo: SbVec3s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3s.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3s.lo `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo" "$(DEPDIR)/libbase_la-SbVec3s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3s.cpp' object='libbase_la-SbVec3s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3s.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3s.lo `test -f 'SbVec3s.cpp' || echo '$(srcdir)/'`SbVec3s.cpp

libbase_la-SbVec3us.o: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3us.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3us.o `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo" "$(DEPDIR)/libbase_la-SbVec3us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='libbase_la-SbVec3us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3us.o `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp

libbase_la-SbVec3us.obj: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3us.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3us.obj `if test -f 'SbVec3us.cpp'; then $(CYGPATH_W) 'SbVec3us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo" "$(DEPDIR)/libbase_la-SbVec3us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='libbase_la-SbVec3us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3us.obj `if test -f 'SbVec3us.cpp'; then $(CYGPATH_W) 'SbVec3us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3us.cpp'; fi`

libbase_la-SbVec3us.lo: SbVec3us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3us.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3us.lo `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo" "$(DEPDIR)/libbase_la-SbVec3us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3us.cpp' object='libbase_la-SbVec3us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3us.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3us.lo `test -f 'SbVec3us.cpp' || echo '$(srcdir)/'`SbVec3us.cpp

libbase_la-SbVec3i32.o: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3i32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3i32.o `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" "$(DEPDIR)/libbase_la-SbVec3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='libbase_la-SbVec3i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3i32.o `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp

libbase_la-SbVec3i32.obj: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3i32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3i32.obj `if test -f 'SbVec3i32.cpp'; then $(CYGPATH_W) 'SbVec3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" "$(DEPDIR)/libbase_la-SbVec3i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='libbase_la-SbVec3i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3i32.obj `if test -f 'SbVec3i32.cpp'; then $(CYGPATH_W) 'SbVec3i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3i32.cpp'; fi`

libbase_la-SbVec3i32.lo: SbVec3i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3i32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3i32.lo `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo" "$(DEPDIR)/libbase_la-SbVec3i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3i32.cpp' object='libbase_la-SbVec3i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3i32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3i32.lo `test -f 'SbVec3i32.cpp' || echo '$(srcdir)/'`SbVec3i32.cpp

libbase_la-SbVec3ui32.o: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ui32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ui32.o `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec3ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='libbase_la-SbVec3ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ui32.o `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp

libbase_la-SbVec3ui32.obj: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ui32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ui32.obj `if test -f 'SbVec3ui32.cpp'; then $(CYGPATH_W) 'SbVec3ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec3ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='libbase_la-SbVec3ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ui32.obj `if test -f 'SbVec3ui32.cpp'; then $(CYGPATH_W) 'SbVec3ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3ui32.cpp'; fi`

libbase_la-SbVec3ui32.lo: SbVec3ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3ui32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3ui32.lo `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec3ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3ui32.cpp' object='libbase_la-SbVec3ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3ui32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3ui32.lo `test -f 'SbVec3ui32.cpp' || echo '$(srcdir)/'`SbVec3ui32.cpp

libbase_la-SbVec3f.o: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3f.o `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo" "$(DEPDIR)/libbase_la-SbVec3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='libbase_la-SbVec3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3f.o `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp

libbase_la-SbVec3f.obj: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3f.obj `if test -f 'SbVec3f.cpp'; then $(CYGPATH_W) 'SbVec3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo" "$(DEPDIR)/libbase_la-SbVec3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='libbase_la-SbVec3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3f.obj `if test -f 'SbVec3f.cpp'; then $(CYGPATH_W) 'SbVec3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3f.cpp'; fi`

libbase_la-SbVec3f.lo: SbVec3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3f.lo `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo" "$(DEPDIR)/libbase_la-SbVec3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3f.cpp' object='libbase_la-SbVec3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3f.lo `test -f 'SbVec3f.cpp' || echo '$(srcdir)/'`SbVec3f.cpp

libbase_la-SbVec3d.o: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3d.o `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo" "$(DEPDIR)/libbase_la-SbVec3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='libbase_la-SbVec3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3d.o `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp

libbase_la-SbVec3d.obj: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3d.obj `if test -f 'SbVec3d.cpp'; then $(CYGPATH_W) 'SbVec3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo" "$(DEPDIR)/libbase_la-SbVec3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='libbase_la-SbVec3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3d.obj `if test -f 'SbVec3d.cpp'; then $(CYGPATH_W) 'SbVec3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec3d.cpp'; fi`

libbase_la-SbVec3d.lo: SbVec3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec3d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec3d.lo `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo" "$(DEPDIR)/libbase_la-SbVec3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec3d.cpp' object='libbase_la-SbVec3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec3d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec3d.lo `test -f 'SbVec3d.cpp' || echo '$(srcdir)/'`SbVec3d.cpp

libbase_la-SbVec4b.o: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4b.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4b.o `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo" "$(DEPDIR)/libbase_la-SbVec4b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='libbase_la-SbVec4b.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4b.o `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp

libbase_la-SbVec4b.obj: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4b.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4b.obj `if test -f 'SbVec4b.cpp'; then $(CYGPATH_W) 'SbVec4b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4b.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo" "$(DEPDIR)/libbase_la-SbVec4b.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='libbase_la-SbVec4b.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4b.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4b.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4b.obj `if test -f 'SbVec4b.cpp'; then $(CYGPATH_W) 'SbVec4b.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4b.cpp'; fi`

libbase_la-SbVec4b.lo: SbVec4b.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4b.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4b.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4b.lo `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo" "$(DEPDIR)/libbase_la-SbVec4b.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4b.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4b.cpp' object='libbase_la-SbVec4b.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4b.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4b.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4b.lo `test -f 'SbVec4b.cpp' || echo '$(srcdir)/'`SbVec4b.cpp

libbase_la-SbVec4ub.o: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ub.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ub.o `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" "$(DEPDIR)/libbase_la-SbVec4ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='libbase_la-SbVec4ub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ub.o `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp

libbase_la-SbVec4ub.obj: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ub.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ub.obj `if test -f 'SbVec4ub.cpp'; then $(CYGPATH_W) 'SbVec4ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ub.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" "$(DEPDIR)/libbase_la-SbVec4ub.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='libbase_la-SbVec4ub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ub.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ub.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ub.obj `if test -f 'SbVec4ub.cpp'; then $(CYGPATH_W) 'SbVec4ub.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ub.cpp'; fi`

libbase_la-SbVec4ub.lo: SbVec4ub.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ub.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ub.lo `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo" "$(DEPDIR)/libbase_la-SbVec4ub.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ub.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ub.cpp' object='libbase_la-SbVec4ub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ub.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ub.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ub.lo `test -f 'SbVec4ub.cpp' || echo '$(srcdir)/'`SbVec4ub.cpp

libbase_la-SbVec4s.o: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4s.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4s.o `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo" "$(DEPDIR)/libbase_la-SbVec4s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='libbase_la-SbVec4s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4s.o `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp

libbase_la-SbVec4s.obj: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4s.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4s.obj `if test -f 'SbVec4s.cpp'; then $(CYGPATH_W) 'SbVec4s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4s.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo" "$(DEPDIR)/libbase_la-SbVec4s.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='libbase_la-SbVec4s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4s.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4s.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4s.obj `if test -f 'SbVec4s.cpp'; then $(CYGPATH_W) 'SbVec4s.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4s.cpp'; fi`

libbase_la-SbVec4s.lo: SbVec4s.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4s.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4s.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4s.lo `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo" "$(DEPDIR)/libbase_la-SbVec4s.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4s.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4s.cpp' object='libbase_la-SbVec4s.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4s.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4s.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4s.lo `test -f 'SbVec4s.cpp' || echo '$(srcdir)/'`SbVec4s.cpp

libbase_la-SbVec4us.o: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4us.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4us.o `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo" "$(DEPDIR)/libbase_la-SbVec4us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='libbase_la-SbVec4us.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4us.o `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp

libbase_la-SbVec4us.obj: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4us.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4us.obj `if test -f 'SbVec4us.cpp'; then $(CYGPATH_W) 'SbVec4us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4us.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo" "$(DEPDIR)/libbase_la-SbVec4us.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='libbase_la-SbVec4us.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4us.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4us.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4us.obj `if test -f 'SbVec4us.cpp'; then $(CYGPATH_W) 'SbVec4us.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4us.cpp'; fi`

libbase_la-SbVec4us.lo: SbVec4us.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4us.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4us.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4us.lo `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo" "$(DEPDIR)/libbase_la-SbVec4us.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4us.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4us.cpp' object='libbase_la-SbVec4us.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4us.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4us.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4us.lo `test -f 'SbVec4us.cpp' || echo '$(srcdir)/'`SbVec4us.cpp

libbase_la-SbVec4i32.o: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4i32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4i32.o `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" "$(DEPDIR)/libbase_la-SbVec4i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='libbase_la-SbVec4i32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4i32.o `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp

libbase_la-SbVec4i32.obj: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4i32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4i32.obj `if test -f 'SbVec4i32.cpp'; then $(CYGPATH_W) 'SbVec4i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4i32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" "$(DEPDIR)/libbase_la-SbVec4i32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='libbase_la-SbVec4i32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4i32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4i32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4i32.obj `if test -f 'SbVec4i32.cpp'; then $(CYGPATH_W) 'SbVec4i32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4i32.cpp'; fi`

libbase_la-SbVec4i32.lo: SbVec4i32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4i32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4i32.lo `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo" "$(DEPDIR)/libbase_la-SbVec4i32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4i32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4i32.cpp' object='libbase_la-SbVec4i32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4i32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4i32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4i32.lo `test -f 'SbVec4i32.cpp' || echo '$(srcdir)/'`SbVec4i32.cpp

libbase_la-SbVec4ui32.o: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ui32.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ui32.o `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec4ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='libbase_la-SbVec4ui32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ui32.o `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp

libbase_la-SbVec4ui32.obj: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ui32.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ui32.obj `if test -f 'SbVec4ui32.cpp'; then $(CYGPATH_W) 'SbVec4ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ui32.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec4ui32.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='libbase_la-SbVec4ui32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ui32.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ui32.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ui32.obj `if test -f 'SbVec4ui32.cpp'; then $(CYGPATH_W) 'SbVec4ui32.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4ui32.cpp'; fi`

libbase_la-SbVec4ui32.lo: SbVec4ui32.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4ui32.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4ui32.lo `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo" "$(DEPDIR)/libbase_la-SbVec4ui32.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4ui32.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4ui32.cpp' object='libbase_la-SbVec4ui32.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4ui32.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4ui32.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4ui32.lo `test -f 'SbVec4ui32.cpp' || echo '$(srcdir)/'`SbVec4ui32.cpp

libbase_la-SbVec4f.o: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4f.o `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo" "$(DEPDIR)/libbase_la-SbVec4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='libbase_la-SbVec4f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4f.o `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp

libbase_la-SbVec4f.obj: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4f.obj `if test -f 'SbVec4f.cpp'; then $(CYGPATH_W) 'SbVec4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo" "$(DEPDIR)/libbase_la-SbVec4f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='libbase_la-SbVec4f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4f.obj `if test -f 'SbVec4f.cpp'; then $(CYGPATH_W) 'SbVec4f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4f.cpp'; fi`

libbase_la-SbVec4f.lo: SbVec4f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4f.lo `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo" "$(DEPDIR)/libbase_la-SbVec4f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4f.cpp' object='libbase_la-SbVec4f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4f.lo `test -f 'SbVec4f.cpp' || echo '$(srcdir)/'`SbVec4f.cpp

libbase_la-SbVec4d.o: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4d.o `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo" "$(DEPDIR)/libbase_la-SbVec4d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='libbase_la-SbVec4d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4d.o `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp

libbase_la-SbVec4d.obj: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4d.obj `if test -f 'SbVec4d.cpp'; then $(CYGPATH_W) 'SbVec4d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo" "$(DEPDIR)/libbase_la-SbVec4d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='libbase_la-SbVec4d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4d.obj `if test -f 'SbVec4d.cpp'; then $(CYGPATH_W) 'SbVec4d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbVec4d.cpp'; fi`

libbase_la-SbVec4d.lo: SbVec4d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbVec4d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbVec4d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbVec4d.lo `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo" "$(DEPDIR)/libbase_la-SbVec4d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbVec4d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbVec4d.cpp' object='libbase_la-SbVec4d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbVec4d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbVec4d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbVec4d.lo `test -f 'SbVec4d.cpp' || echo '$(srcdir)/'`SbVec4d.cpp

libbase_la-SbViewVolume.o: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewVolume.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewVolume.o `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='libbase_la-SbViewVolume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewVolume.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewVolume.o `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp

libbase_la-SbViewVolume.obj: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewVolume.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewVolume.obj `if test -f 'SbViewVolume.cpp'; then $(CYGPATH_W) 'SbViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewVolume.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='libbase_la-SbViewVolume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewVolume.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewVolume.obj `if test -f 'SbViewVolume.cpp'; then $(CYGPATH_W) 'SbViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewVolume.cpp'; fi`

libbase_la-SbViewVolume.lo: SbViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewVolume.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewVolume.lo `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbViewVolume.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewVolume.cpp' object='libbase_la-SbViewVolume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewVolume.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbViewVolume.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewVolume.lo `test -f 'SbViewVolume.cpp' || echo '$(srcdir)/'`SbViewVolume.cpp

libbase_la-SbDPViewVolume.o: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPViewVolume.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPViewVolume.o `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbDPViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='libbase_la-SbDPViewVolume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPViewVolume.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPViewVolume.o `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp

libbase_la-SbDPViewVolume.obj: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPViewVolume.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPViewVolume.obj `if test -f 'SbDPViewVolume.cpp'; then $(CYGPATH_W) 'SbDPViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPViewVolume.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbDPViewVolume.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='libbase_la-SbDPViewVolume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPViewVolume.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbDPViewVolume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPViewVolume.obj `if test -f 'SbDPViewVolume.cpp'; then $(CYGPATH_W) 'SbDPViewVolume.cpp'; else $(CYGPATH_W) '$(srcdir)/SbDPViewVolume.cpp'; fi`

libbase_la-SbDPViewVolume.lo: SbDPViewVolume.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbDPViewVolume.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbDPViewVolume.lo `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo" "$(DEPDIR)/libbase_la-SbDPViewVolume.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbDPViewVolume.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbDPViewVolume.cpp' object='libbase_la-SbDPViewVolume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbDPViewVolume.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbDPViewVolume.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbDPViewVolume.lo `test -f 'SbDPViewVolume.cpp' || echo '$(srcdir)/'`SbDPViewVolume.cpp

libbase_la-SbViewportRegion.o: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewportRegion.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewportRegion.o `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" "$(DEPDIR)/libbase_la-SbViewportRegion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='libbase_la-SbViewportRegion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewportRegion.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewportRegion.o `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp

libbase_la-SbViewportRegion.obj: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewportRegion.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewportRegion.obj `if test -f 'SbViewportRegion.cpp'; then $(CYGPATH_W) 'SbViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewportRegion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" "$(DEPDIR)/libbase_la-SbViewportRegion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='libbase_la-SbViewportRegion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewportRegion.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewportRegion.obj `if test -f 'SbViewportRegion.cpp'; then $(CYGPATH_W) 'SbViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SbViewportRegion.cpp'; fi`

libbase_la-SbViewportRegion.lo: SbViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbViewportRegion.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbViewportRegion.lo `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo" "$(DEPDIR)/libbase_la-SbViewportRegion.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbViewportRegion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbViewportRegion.cpp' object='libbase_la-SbViewportRegion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbViewportRegion.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbViewportRegion.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbViewportRegion.lo `test -f 'SbViewportRegion.cpp' || echo '$(srcdir)/'`SbViewportRegion.cpp

libbase_la-SbXfBox3f.o: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3f.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3f.o `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='libbase_la-SbXfBox3f.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3f.o `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp

libbase_la-SbXfBox3f.obj: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3f.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3f.obj `if test -f 'SbXfBox3f.cpp'; then $(CYGPATH_W) 'SbXfBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3f.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3f.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='libbase_la-SbXfBox3f.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3f.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3f.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3f.obj `if test -f 'SbXfBox3f.cpp'; then $(CYGPATH_W) 'SbXfBox3f.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3f.cpp'; fi`

libbase_la-SbXfBox3f.lo: SbXfBox3f.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3f.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3f.lo `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3f.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3f.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3f.cpp' object='libbase_la-SbXfBox3f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3f.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3f.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3f.lo `test -f 'SbXfBox3f.cpp' || echo '$(srcdir)/'`SbXfBox3f.cpp

libbase_la-SbXfBox3d.o: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3d.o -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3d.o `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='libbase_la-SbXfBox3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3d.o `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp

libbase_la-SbXfBox3d.obj: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3d.obj -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3d.obj `if test -f 'SbXfBox3d.cpp'; then $(CYGPATH_W) 'SbXfBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='libbase_la-SbXfBox3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3d.Po' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3d.obj `if test -f 'SbXfBox3d.cpp'; then $(CYGPATH_W) 'SbXfBox3d.cpp'; else $(CYGPATH_W) '$(srcdir)/SbXfBox3d.cpp'; fi`

libbase_la-SbXfBox3d.lo: SbXfBox3d.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -MT libbase_la-SbXfBox3d.lo -MD -MP -MF "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libbase_la-SbXfBox3d.lo `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo" "$(DEPDIR)/libbase_la-SbXfBox3d.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libbase_la-SbXfBox3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SbXfBox3d.cpp' object='libbase_la-SbXfBox3d.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libbase_la-SbXfBox3d.Plo' tmpdepfile='$(DEPDIR)/libbase_la-SbXfBox3d.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbase_la_CXXFLAGS) $(CXXFLAGS) -c -o libbase_la-SbXfBox3d.lo `test -f 'SbXfBox3d.cpp' || echo '$(srcdir)/'`SbXfBox3d.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
libbaseincHEADERS_INSTALL = $(INSTALL_HEADER)

uninstall-libbaseincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libbaseinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libbaseincdir)/$$f"; \
	  rm -f $(DESTDIR)$(libbaseincdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libbaseincdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-libbaseincHEADERS

install-exec-am: install-exec-local install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libbaseincHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-exec-local install-info install-info-am \
	install-libLTLIBRARIES install-libbaseincHEADERS install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-libbaseincHEADERS


# this rule causes a make warning, so we remove it when it is not in use
base.lst: Makefile $(base_lst_OBJECTS)
	@echo "Linking base.lst..."; \
	rm -f $@; touch $@; \
	for i in $(base_lst_OBJECTS); do echo $$i >>$@; done

install-libbaseincHEADERS: $(libbaseinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(libbaseinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(libbaseincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(libbaseincdir); \
	fi
	@list='$(libbaseinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libbaseincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst" || exit 1; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libbaseincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	:

# When using --enable-hacking, the user tends to manually replace some 
# of the installed libraries by symlinks back to the build directory. 
# But Mac OS X's install program refuses to overwrite symlinks => we 
# have to explicitly remove existing symlinks before installation.
@MACOSX_TRUE@install-exec-local:
@MACOSX_TRUE@	@for file in $(DESTDIR)$(lib@nop@dir)/libbase@SUFFIX@LINKHACK*.dylib; do \
@MACOSX_TRUE@	  if test -L "$$file"; then \
@MACOSX_TRUE@	    rm -f "$$file"; \
@MACOSX_TRUE@	  fi \
@MACOSX_TRUE@	done; 
@MACOSX_FALSE@install-exec-local:

install-symlinks:
	@echo "Creating symlink to libbase@SUFFIX@LINKHACK*@LIBEXT@*"; \
        for dir in $(SUBDIRS) ; do \
          (cd $$dir; $(MAKE) install-symlinks;) \
        done ; \
        here=`pwd`; \
	(cd $(DESTDIR)$(lib@nop@dir); \
	for file in libbase@SUFFIX@LINKHACK*@LIBEXT@*; do \
	  ln -sf "$$here/.libs/$$file" "$$file"; \
	done; \
        cd -; )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
